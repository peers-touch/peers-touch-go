// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: station_user_avatar.proto

package user_avatar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserAvatar represents a user's profile avatar image
type UserAvatar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // Unique identifier for the avatar
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // User ID this avatar belongs to
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                     // Original filename
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                               // URL to access the avatar
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                            // File size in bytes
	MimeType      string                 `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`     // MIME type of the image
	IsCurrent     bool                   `protobuf:"varint,7,opt,name=is_current,json=isCurrent,proto3" json:"is_current,omitempty"` // Whether this is the current avatar
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`  // When the avatar was uploaded
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAvatar) Reset() {
	*x = UserAvatar{}
	mi := &file_station_user_avatar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAvatar) ProtoMessage() {}

func (x *UserAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_station_user_avatar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAvatar.ProtoReflect.Descriptor instead.
func (*UserAvatar) Descriptor() ([]byte, []int) {
	return file_station_user_avatar_proto_rawDescGZIP(), []int{0}
}

func (x *UserAvatar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAvatar) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAvatar) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UserAvatar) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserAvatar) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserAvatar) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UserAvatar) GetIsCurrent() bool {
	if x != nil {
		return x.IsCurrent
	}
	return false
}

func (x *UserAvatar) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// UploadAvatarRequest is the request for uploading a new avatar
// In practice, this is implemented as a multipart form upload with 'user_id' and 'avatar' fields
type UploadAvatarRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID uploading the avatar
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAvatarRequest) Reset() {
	*x = UploadAvatarRequest{}
	mi := &file_station_user_avatar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAvatarRequest) ProtoMessage() {}

func (x *UploadAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_station_user_avatar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAvatarRequest.ProtoReflect.Descriptor instead.
func (*UploadAvatarRequest) Descriptor() ([]byte, []int) {
	return file_station_user_avatar_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAvatarRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// UploadAvatarResponse is the response after uploading an avatar
type UploadAvatarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Avatar        *UserAvatar            `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`    // The newly uploaded avatar
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // Whether the upload was successful
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`  // Error message if unsuccessful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAvatarResponse) Reset() {
	*x = UploadAvatarResponse{}
	mi := &file_station_user_avatar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAvatarResponse) ProtoMessage() {}

func (x *UploadAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_station_user_avatar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAvatarResponse.ProtoReflect.Descriptor instead.
func (*UploadAvatarResponse) Descriptor() ([]byte, []int) {
	return file_station_user_avatar_proto_rawDescGZIP(), []int{2}
}

func (x *UploadAvatarResponse) GetAvatar() *UserAvatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *UploadAvatarResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadAvatarResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetUserAvatarsRequest is the request for retrieving a user's avatars
type GetUserAvatarsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID to get avatars for
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                // Maximum number of avatars to return (default: 5)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAvatarsRequest) Reset() {
	*x = GetUserAvatarsRequest{}
	mi := &file_station_user_avatar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAvatarsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAvatarsRequest) ProtoMessage() {}

func (x *GetUserAvatarsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_station_user_avatar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAvatarsRequest.ProtoReflect.Descriptor instead.
func (*GetUserAvatarsRequest) Descriptor() ([]byte, []int) {
	return file_station_user_avatar_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserAvatarsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserAvatarsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// GetUserAvatarsResponse is the response containing user avatars
type GetUserAvatarsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Avatars       []*UserAvatar          `protobuf:"bytes,1,rep,name=avatars,proto3" json:"avatars,omitempty"`  // List of user avatars (most recent first)
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // Whether the request was successful
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`  // Error message if unsuccessful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAvatarsResponse) Reset() {
	*x = GetUserAvatarsResponse{}
	mi := &file_station_user_avatar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAvatarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAvatarsResponse) ProtoMessage() {}

func (x *GetUserAvatarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_station_user_avatar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAvatarsResponse.ProtoReflect.Descriptor instead.
func (*GetUserAvatarsResponse) Descriptor() ([]byte, []int) {
	return file_station_user_avatar_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserAvatarsResponse) GetAvatars() []*UserAvatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

func (x *GetUserAvatarsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserAvatarsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_station_user_avatar_proto protoreflect.FileDescriptor

const file_station_user_avatar_proto_rawDesc = "" +
	"\n" +
	"\x19station_user_avatar.proto\x12\x13peers_touch.v1.user\x1a\x1fgoogle/protobuf/timestamp.proto\"\xee\x01\n" +
	"\n" +
	"UserAvatar\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12\x1b\n" +
	"\tmime_type\x18\x06 \x01(\tR\bmimeType\x12\x1d\n" +
	"\n" +
	"is_current\x18\a \x01(\bR\tisCurrent\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\".\n" +
	"\x13UploadAvatarRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\x83\x01\n" +
	"\x14UploadAvatarResponse\x127\n" +
	"\x06avatar\x18\x01 \x01(\v2\x1f.peers_touch.v1.user.UserAvatarR\x06avatar\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"F\n" +
	"\x15GetUserAvatarsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\x87\x01\n" +
	"\x16GetUserAvatarsResponse\x129\n" +
	"\aavatars\x18\x01 \x03(\v2\x1f.peers_touch.v1.user.UserAvatarR\aavatars\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessageB<Z:github.com/dirty-bro-tech/peers-touch-proto/v1/user_avatarb\x06proto3"

var (
	file_station_user_avatar_proto_rawDescOnce sync.Once
	file_station_user_avatar_proto_rawDescData []byte
)

func file_station_user_avatar_proto_rawDescGZIP() []byte {
	file_station_user_avatar_proto_rawDescOnce.Do(func() {
		file_station_user_avatar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_station_user_avatar_proto_rawDesc), len(file_station_user_avatar_proto_rawDesc)))
	})
	return file_station_user_avatar_proto_rawDescData
}

var file_station_user_avatar_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_station_user_avatar_proto_goTypes = []any{
	(*UserAvatar)(nil),             // 0: peers_touch.v1.user.UserAvatar
	(*UploadAvatarRequest)(nil),    // 1: peers_touch.v1.user.UploadAvatarRequest
	(*UploadAvatarResponse)(nil),   // 2: peers_touch.v1.user.UploadAvatarResponse
	(*GetUserAvatarsRequest)(nil),  // 3: peers_touch.v1.user.GetUserAvatarsRequest
	(*GetUserAvatarsResponse)(nil), // 4: peers_touch.v1.user.GetUserAvatarsResponse
	(*timestamppb.Timestamp)(nil),  // 5: google.protobuf.Timestamp
}
var file_station_user_avatar_proto_depIdxs = []int32{
	5, // 0: peers_touch.v1.user.UserAvatar.created_at:type_name -> google.protobuf.Timestamp
	0, // 1: peers_touch.v1.user.UploadAvatarResponse.avatar:type_name -> peers_touch.v1.user.UserAvatar
	0, // 2: peers_touch.v1.user.GetUserAvatarsResponse.avatars:type_name -> peers_touch.v1.user.UserAvatar
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_station_user_avatar_proto_init() }
func file_station_user_avatar_proto_init() {
	if File_station_user_avatar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_station_user_avatar_proto_rawDesc), len(file_station_user_avatar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_station_user_avatar_proto_goTypes,
		DependencyIndexes: file_station_user_avatar_proto_depIdxs,
		MessageInfos:      file_station_user_avatar_proto_msgTypes,
	}.Build()
	File_station_user_avatar_proto = out.File
	file_station_user_avatar_proto_goTypes = nil
	file_station_user_avatar_proto_depIdxs = nil
}
