// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: connection.proto

package connection

import (
	identity "github.com/dirty-bro-tech/peers-touch-go/model/v2/identity"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConnectionState represents the current state of a connection.
type ConnectionState int32

const (
	ConnectionState_CONNECTION_STATE_UNKNOWN       ConnectionState = 0
	ConnectionState_CONNECTION_STATE_CONNECTING    ConnectionState = 1
	ConnectionState_CONNECTION_STATE_CONNECTED     ConnectionState = 2
	ConnectionState_CONNECTION_STATE_DISCONNECTING ConnectionState = 3
	ConnectionState_CONNECTION_STATE_DISCONNECTED  ConnectionState = 4
	ConnectionState_CONNECTION_STATE_FAILED        ConnectionState = 5
)

// Enum value maps for ConnectionState.
var (
	ConnectionState_name = map[int32]string{
		0: "CONNECTION_STATE_UNKNOWN",
		1: "CONNECTION_STATE_CONNECTING",
		2: "CONNECTION_STATE_CONNECTED",
		3: "CONNECTION_STATE_DISCONNECTING",
		4: "CONNECTION_STATE_DISCONNECTED",
		5: "CONNECTION_STATE_FAILED",
	}
	ConnectionState_value = map[string]int32{
		"CONNECTION_STATE_UNKNOWN":       0,
		"CONNECTION_STATE_CONNECTING":    1,
		"CONNECTION_STATE_CONNECTED":     2,
		"CONNECTION_STATE_DISCONNECTING": 3,
		"CONNECTION_STATE_DISCONNECTED":  4,
		"CONNECTION_STATE_FAILED":        5,
	}
)

func (x ConnectionState) Enum() *ConnectionState {
	p := new(ConnectionState)
	*p = x
	return p
}

func (x ConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_connection_proto_enumTypes[0].Descriptor()
}

func (ConnectionState) Type() protoreflect.EnumType {
	return &file_connection_proto_enumTypes[0]
}

func (x ConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionState.Descriptor instead.
func (ConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{0}
}

// LinkState represents the current state of a link.
type LinkState int32

const (
	LinkState_LINK_STATE_UNKNOWN      LinkState = 0
	LinkState_LINK_STATE_ESTABLISHING LinkState = 1
	LinkState_LINK_STATE_ACTIVE       LinkState = 2
	LinkState_LINK_STATE_IDLE         LinkState = 3
	LinkState_LINK_STATE_CLOSING      LinkState = 4
	LinkState_LINK_STATE_CLOSED       LinkState = 5
	LinkState_LINK_STATE_FAILED       LinkState = 6
)

// Enum value maps for LinkState.
var (
	LinkState_name = map[int32]string{
		0: "LINK_STATE_UNKNOWN",
		1: "LINK_STATE_ESTABLISHING",
		2: "LINK_STATE_ACTIVE",
		3: "LINK_STATE_IDLE",
		4: "LINK_STATE_CLOSING",
		5: "LINK_STATE_CLOSED",
		6: "LINK_STATE_FAILED",
	}
	LinkState_value = map[string]int32{
		"LINK_STATE_UNKNOWN":      0,
		"LINK_STATE_ESTABLISHING": 1,
		"LINK_STATE_ACTIVE":       2,
		"LINK_STATE_IDLE":         3,
		"LINK_STATE_CLOSING":      4,
		"LINK_STATE_CLOSED":       5,
		"LINK_STATE_FAILED":       6,
	}
)

func (x LinkState) Enum() *LinkState {
	p := new(LinkState)
	*p = x
	return p
}

func (x LinkState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkState) Descriptor() protoreflect.EnumDescriptor {
	return file_connection_proto_enumTypes[1].Descriptor()
}

func (LinkState) Type() protoreflect.EnumType {
	return &file_connection_proto_enumTypes[1]
}

func (x LinkState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkState.Descriptor instead.
func (LinkState) EnumDescriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{1}
}

// ConnectionID represents a unique identifier for a connection.
type ConnectionID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionID) Reset() {
	*x = ConnectionID{}
	mi := &file_connection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionID) ProtoMessage() {}

func (x *ConnectionID) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionID.ProtoReflect.Descriptor instead.
func (*ConnectionID) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// LinkID represents a unique identifier for a link between two peers.
type LinkID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkID) Reset() {
	*x = LinkID{}
	mi := &file_connection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkID) ProtoMessage() {}

func (x *LinkID) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkID.ProtoReflect.Descriptor instead.
func (*LinkID) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{1}
}

func (x *LinkID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ConnectionInfo contains metadata about a connection.
type ConnectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *ConnectionID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RemotePeer    *identity.IdentityID   `protobuf:"bytes,2,opt,name=remote_peer,json=remotePeer,proto3" json:"remote_peer,omitempty"`
	LocalAddr     string                 `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr    string                 `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	Protocol      string                 `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	State         ConnectionState        `protobuf:"varint,6,opt,name=state,proto3,enum=peers_touch.v2.ConnectionState" json:"state,omitempty"`
	EstablishedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=established_at,json=establishedAt,proto3" json:"established_at,omitempty"`
	LastActivity  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	BytesSent     uint64                 `protobuf:"varint,9,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived uint64                 `protobuf:"varint,10,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	LatencyMs     int64                  `protobuf:"varint,11,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"` // Latency in milliseconds
	Bandwidth     uint64                 `protobuf:"varint,12,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	mi := &file_connection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionInfo) GetId() *ConnectionID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ConnectionInfo) GetRemotePeer() *identity.IdentityID {
	if x != nil {
		return x.RemotePeer
	}
	return nil
}

func (x *ConnectionInfo) GetLocalAddr() string {
	if x != nil {
		return x.LocalAddr
	}
	return ""
}

func (x *ConnectionInfo) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *ConnectionInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectionInfo) GetState() ConnectionState {
	if x != nil {
		return x.State
	}
	return ConnectionState_CONNECTION_STATE_UNKNOWN
}

func (x *ConnectionInfo) GetEstablishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EstablishedAt
	}
	return nil
}

func (x *ConnectionInfo) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *ConnectionInfo) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *ConnectionInfo) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *ConnectionInfo) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *ConnectionInfo) GetBandwidth() uint64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

// LinkInfo contains metadata about a link.
type LinkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *LinkID                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocalPeer     *identity.IdentityID   `protobuf:"bytes,2,opt,name=local_peer,json=localPeer,proto3" json:"local_peer,omitempty"`
	RemotePeer    *identity.IdentityID   `protobuf:"bytes,3,opt,name=remote_peer,json=remotePeer,proto3" json:"remote_peer,omitempty"`
	Connections   []*ConnectionID        `protobuf:"bytes,4,rep,name=connections,proto3" json:"connections,omitempty"`
	State         LinkState              `protobuf:"varint,5,opt,name=state,proto3,enum=peers_touch.v2.LinkState" json:"state,omitempty"`
	Quality       float64                `protobuf:"fixed64,6,opt,name=quality,proto3" json:"quality,omitempty"` // 0.0 to 1.0
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	IsReliable    bool                   `protobuf:"varint,9,opt,name=is_reliable,json=isReliable,proto3" json:"is_reliable,omitempty"`
	IsEncrypted   bool                   `protobuf:"varint,10,opt,name=is_encrypted,json=isEncrypted,proto3" json:"is_encrypted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkInfo) Reset() {
	*x = LinkInfo{}
	mi := &file_connection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkInfo) ProtoMessage() {}

func (x *LinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkInfo.ProtoReflect.Descriptor instead.
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{3}
}

func (x *LinkInfo) GetId() *LinkID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *LinkInfo) GetLocalPeer() *identity.IdentityID {
	if x != nil {
		return x.LocalPeer
	}
	return nil
}

func (x *LinkInfo) GetRemotePeer() *identity.IdentityID {
	if x != nil {
		return x.RemotePeer
	}
	return nil
}

func (x *LinkInfo) GetConnections() []*ConnectionID {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *LinkInfo) GetState() LinkState {
	if x != nil {
		return x.State
	}
	return LinkState_LINK_STATE_UNKNOWN
}

func (x *LinkInfo) GetQuality() float64 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *LinkInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LinkInfo) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

func (x *LinkInfo) GetIsReliable() bool {
	if x != nil {
		return x.IsReliable
	}
	return false
}

func (x *LinkInfo) GetIsEncrypted() bool {
	if x != nil {
		return x.IsEncrypted
	}
	return false
}

// ConnectionOptions contains options for establishing connections.
type ConnectionOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeoutMs     int64                  `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`         // Timeout in milliseconds
	KeepAliveMs   int64                  `protobuf:"varint,2,opt,name=keep_alive_ms,json=keepAliveMs,proto3" json:"keep_alive_ms,omitempty"` // Keep alive interval in milliseconds
	MaxRetries    int32                  `protobuf:"varint,3,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Encryption    bool                   `protobuf:"varint,5,opt,name=encryption,proto3" json:"encryption,omitempty"`
	Compression   bool                   `protobuf:"varint,6,opt,name=compression,proto3" json:"compression,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionOptions) Reset() {
	*x = ConnectionOptions{}
	mi := &file_connection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionOptions) ProtoMessage() {}

func (x *ConnectionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionOptions.ProtoReflect.Descriptor instead.
func (*ConnectionOptions) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectionOptions) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *ConnectionOptions) GetKeepAliveMs() int64 {
	if x != nil {
		return x.KeepAliveMs
	}
	return 0
}

func (x *ConnectionOptions) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *ConnectionOptions) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectionOptions) GetEncryption() bool {
	if x != nil {
		return x.Encryption
	}
	return false
}

func (x *ConnectionOptions) GetCompression() bool {
	if x != nil {
		return x.Compression
	}
	return false
}

func (x *ConnectionOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// LinkOptions contains options for establishing links.
type LinkOptions struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PreferredProtocols []string               `protobuf:"bytes,1,rep,name=preferred_protocols,json=preferredProtocols,proto3" json:"preferred_protocols,omitempty"`
	MaxConnections     int32                  `protobuf:"varint,2,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	LoadBalancing      string                 `protobuf:"bytes,3,opt,name=load_balancing,json=loadBalancing,proto3" json:"load_balancing,omitempty"` // "round_robin", "least_latency", etc.
	Redundancy         bool                   `protobuf:"varint,4,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	AutoReconnect      bool                   `protobuf:"varint,5,opt,name=auto_reconnect,json=autoReconnect,proto3" json:"auto_reconnect,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LinkOptions) Reset() {
	*x = LinkOptions{}
	mi := &file_connection_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkOptions) ProtoMessage() {}

func (x *LinkOptions) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkOptions.ProtoReflect.Descriptor instead.
func (*LinkOptions) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{5}
}

func (x *LinkOptions) GetPreferredProtocols() []string {
	if x != nil {
		return x.PreferredProtocols
	}
	return nil
}

func (x *LinkOptions) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *LinkOptions) GetLoadBalancing() string {
	if x != nil {
		return x.LoadBalancing
	}
	return ""
}

func (x *LinkOptions) GetRedundancy() bool {
	if x != nil {
		return x.Redundancy
	}
	return false
}

func (x *LinkOptions) GetAutoReconnect() bool {
	if x != nil {
		return x.AutoReconnect
	}
	return false
}

func (x *LinkOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ConnectRequest represents a request to establish a connection.
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Options       *ConnectionOptions     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_connection_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ConnectRequest) GetOptions() *ConnectionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// ConnectResponse represents the response to a connection request.
type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    *ConnectionInfo        `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_connection_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectResponse) GetConnection() *ConnectionInfo {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *ConnectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// EstablishLinkRequest represents a request to establish a link.
type EstablishLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemotePeer    *identity.IdentityID   `protobuf:"bytes,1,opt,name=remote_peer,json=remotePeer,proto3" json:"remote_peer,omitempty"`
	Options       *LinkOptions           `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstablishLinkRequest) Reset() {
	*x = EstablishLinkRequest{}
	mi := &file_connection_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstablishLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstablishLinkRequest) ProtoMessage() {}

func (x *EstablishLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstablishLinkRequest.ProtoReflect.Descriptor instead.
func (*EstablishLinkRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{8}
}

func (x *EstablishLinkRequest) GetRemotePeer() *identity.IdentityID {
	if x != nil {
		return x.RemotePeer
	}
	return nil
}

func (x *EstablishLinkRequest) GetOptions() *LinkOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// EstablishLinkResponse represents the response to a link establishment request.
type EstablishLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          *LinkInfo              `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstablishLinkResponse) Reset() {
	*x = EstablishLinkResponse{}
	mi := &file_connection_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstablishLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstablishLinkResponse) ProtoMessage() {}

func (x *EstablishLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstablishLinkResponse.ProtoReflect.Descriptor instead.
func (*EstablishLinkResponse) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{9}
}

func (x *EstablishLinkResponse) GetLink() *LinkInfo {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *EstablishLinkResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ListConnectionsRequest represents a request to list connections.
type ListConnectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerFilter    *identity.IdentityID   `protobuf:"bytes,1,opt,name=peer_filter,json=peerFilter,proto3" json:"peer_filter,omitempty"`                                         // optional filter by peer
	StateFilter   ConnectionState        `protobuf:"varint,2,opt,name=state_filter,json=stateFilter,proto3,enum=peers_touch.v2.ConnectionState" json:"state_filter,omitempty"` // optional filter by state
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectionsRequest) Reset() {
	*x = ListConnectionsRequest{}
	mi := &file_connection_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsRequest) ProtoMessage() {}

func (x *ListConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{10}
}

func (x *ListConnectionsRequest) GetPeerFilter() *identity.IdentityID {
	if x != nil {
		return x.PeerFilter
	}
	return nil
}

func (x *ListConnectionsRequest) GetStateFilter() ConnectionState {
	if x != nil {
		return x.StateFilter
	}
	return ConnectionState_CONNECTION_STATE_UNKNOWN
}

// ListConnectionsResponse represents the response to list connections.
type ListConnectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connections   []*ConnectionInfo      `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectionsResponse) Reset() {
	*x = ListConnectionsResponse{}
	mi := &file_connection_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsResponse) ProtoMessage() {}

func (x *ListConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{11}
}

func (x *ListConnectionsResponse) GetConnections() []*ConnectionInfo {
	if x != nil {
		return x.Connections
	}
	return nil
}

// ListLinksRequest represents a request to list links.
type ListLinksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerFilter    *identity.IdentityID   `protobuf:"bytes,1,opt,name=peer_filter,json=peerFilter,proto3" json:"peer_filter,omitempty"`                                   // optional filter by peer
	StateFilter   LinkState              `protobuf:"varint,2,opt,name=state_filter,json=stateFilter,proto3,enum=peers_touch.v2.LinkState" json:"state_filter,omitempty"` // optional filter by state
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	mi := &file_connection_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{12}
}

func (x *ListLinksRequest) GetPeerFilter() *identity.IdentityID {
	if x != nil {
		return x.PeerFilter
	}
	return nil
}

func (x *ListLinksRequest) GetStateFilter() LinkState {
	if x != nil {
		return x.StateFilter
	}
	return LinkState_LINK_STATE_UNKNOWN
}

// ListLinksResponse represents the response to list links.
type ListLinksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*LinkInfo            `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	mi := &file_connection_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{13}
}

func (x *ListLinksResponse) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

// CloseConnectionRequest represents a request to close a connection.
type CloseConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  *ConnectionID          `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseConnectionRequest) Reset() {
	*x = CloseConnectionRequest{}
	mi := &file_connection_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionRequest) ProtoMessage() {}

func (x *CloseConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionRequest.ProtoReflect.Descriptor instead.
func (*CloseConnectionRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{14}
}

func (x *CloseConnectionRequest) GetConnectionId() *ConnectionID {
	if x != nil {
		return x.ConnectionId
	}
	return nil
}

// CloseLinkRequest represents a request to close a link.
type CloseLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkId        *LinkID                `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseLinkRequest) Reset() {
	*x = CloseLinkRequest{}
	mi := &file_connection_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseLinkRequest) ProtoMessage() {}

func (x *CloseLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseLinkRequest.ProtoReflect.Descriptor instead.
func (*CloseLinkRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{15}
}

func (x *CloseLinkRequest) GetLinkId() *LinkID {
	if x != nil {
		return x.LinkId
	}
	return nil
}

// PingRequest represents a request to ping a peer through a link.
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkId        *LinkID                `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_connection_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{16}
}

func (x *PingRequest) GetLinkId() *LinkID {
	if x != nil {
		return x.LinkId
	}
	return nil
}

// PingResponse represents the response to a ping request.
type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatencyMs     int64                  `protobuf:"varint,1,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`         // Round-trip time in milliseconds
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_connection_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connection_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_connection_proto_rawDescGZIP(), []int{17}
}

func (x *PingResponse) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *PingResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_connection_proto protoreflect.FileDescriptor

const file_connection_proto_rawDesc = "" +
	"\n" +
	"\x10connection.proto\x12\x0epeers_touch.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x0eidentity.proto\"$\n" +
	"\fConnectionID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1e\n" +
	"\x06LinkID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x95\x04\n" +
	"\x0eConnectionInfo\x12,\n" +
	"\x02id\x18\x01 \x01(\v2\x1c.peers_touch.v2.ConnectionIDR\x02id\x12;\n" +
	"\vremote_peer\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"remotePeer\x12\x1d\n" +
	"\n" +
	"local_addr\x18\x03 \x01(\tR\tlocalAddr\x12\x1f\n" +
	"\vremote_addr\x18\x04 \x01(\tR\n" +
	"remoteAddr\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\x125\n" +
	"\x05state\x18\x06 \x01(\x0e2\x1f.peers_touch.v2.ConnectionStateR\x05state\x12A\n" +
	"\x0eestablished_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\restablishedAt\x12?\n" +
	"\rlast_activity\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\t \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\n" +
	" \x01(\x04R\rbytesReceived\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\v \x01(\x03R\tlatencyMs\x12\x1c\n" +
	"\tbandwidth\x18\f \x01(\x04R\tbandwidth\"\xed\x03\n" +
	"\bLinkInfo\x12&\n" +
	"\x02id\x18\x01 \x01(\v2\x16.peers_touch.v2.LinkIDR\x02id\x129\n" +
	"\n" +
	"local_peer\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\tlocalPeer\x12;\n" +
	"\vremote_peer\x18\x03 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"remotePeer\x12>\n" +
	"\vconnections\x18\x04 \x03(\v2\x1c.peers_touch.v2.ConnectionIDR\vconnections\x12/\n" +
	"\x05state\x18\x05 \x01(\x0e2\x19.peers_touch.v2.LinkStateR\x05state\x12\x18\n" +
	"\aquality\x18\x06 \x01(\x01R\aquality\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x127\n" +
	"\tlast_used\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\blastUsed\x12\x1f\n" +
	"\vis_reliable\x18\t \x01(\bR\n" +
	"isReliable\x12!\n" +
	"\fis_encrypted\x18\n" +
	" \x01(\bR\visEncrypted\"\xdf\x02\n" +
	"\x11ConnectionOptions\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x01 \x01(\x03R\ttimeoutMs\x12\"\n" +
	"\rkeep_alive_ms\x18\x02 \x01(\x03R\vkeepAliveMs\x12\x1f\n" +
	"\vmax_retries\x18\x03 \x01(\x05R\n" +
	"maxRetries\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\x12\x1e\n" +
	"\n" +
	"encryption\x18\x05 \x01(\bR\n" +
	"encryption\x12 \n" +
	"\vcompression\x18\x06 \x01(\bR\vcompression\x12K\n" +
	"\bmetadata\x18\a \x03(\v2/.peers_touch.v2.ConnectionOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd9\x02\n" +
	"\vLinkOptions\x12/\n" +
	"\x13preferred_protocols\x18\x01 \x03(\tR\x12preferredProtocols\x12'\n" +
	"\x0fmax_connections\x18\x02 \x01(\x05R\x0emaxConnections\x12%\n" +
	"\x0eload_balancing\x18\x03 \x01(\tR\rloadBalancing\x12\x1e\n" +
	"\n" +
	"redundancy\x18\x04 \x01(\bR\n" +
	"redundancy\x12%\n" +
	"\x0eauto_reconnect\x18\x05 \x01(\bR\rautoReconnect\x12E\n" +
	"\bmetadata\x18\x06 \x03(\v2).peers_touch.v2.LinkOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"a\n" +
	"\x0eConnectRequest\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12;\n" +
	"\aoptions\x18\x02 \x01(\v2!.peers_touch.v2.ConnectionOptionsR\aoptions\"v\n" +
	"\x0fConnectResponse\x12>\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x1e.peers_touch.v2.ConnectionInfoR\n" +
	"connection\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x8a\x01\n" +
	"\x14EstablishLinkRequest\x12;\n" +
	"\vremote_peer\x18\x01 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"remotePeer\x125\n" +
	"\aoptions\x18\x02 \x01(\v2\x1b.peers_touch.v2.LinkOptionsR\aoptions\"j\n" +
	"\x15EstablishLinkResponse\x12,\n" +
	"\x04link\x18\x01 \x01(\v2\x18.peers_touch.v2.LinkInfoR\x04link\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x99\x01\n" +
	"\x16ListConnectionsRequest\x12;\n" +
	"\vpeer_filter\x18\x01 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"peerFilter\x12B\n" +
	"\fstate_filter\x18\x02 \x01(\x0e2\x1f.peers_touch.v2.ConnectionStateR\vstateFilter\"[\n" +
	"\x17ListConnectionsResponse\x12@\n" +
	"\vconnections\x18\x01 \x03(\v2\x1e.peers_touch.v2.ConnectionInfoR\vconnections\"\x8d\x01\n" +
	"\x10ListLinksRequest\x12;\n" +
	"\vpeer_filter\x18\x01 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"peerFilter\x12<\n" +
	"\fstate_filter\x18\x02 \x01(\x0e2\x19.peers_touch.v2.LinkStateR\vstateFilter\"C\n" +
	"\x11ListLinksResponse\x12.\n" +
	"\x05links\x18\x01 \x03(\v2\x18.peers_touch.v2.LinkInfoR\x05links\"[\n" +
	"\x16CloseConnectionRequest\x12A\n" +
	"\rconnection_id\x18\x01 \x01(\v2\x1c.peers_touch.v2.ConnectionIDR\fconnectionId\"C\n" +
	"\x10CloseLinkRequest\x12/\n" +
	"\alink_id\x18\x01 \x01(\v2\x16.peers_touch.v2.LinkIDR\x06linkId\">\n" +
	"\vPingRequest\x12/\n" +
	"\alink_id\x18\x01 \x01(\v2\x16.peers_touch.v2.LinkIDR\x06linkId\"R\n" +
	"\fPingResponse\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x01 \x01(\x03R\tlatencyMs\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage*\xd4\x01\n" +
	"\x0fConnectionState\x12\x1c\n" +
	"\x18CONNECTION_STATE_UNKNOWN\x10\x00\x12\x1f\n" +
	"\x1bCONNECTION_STATE_CONNECTING\x10\x01\x12\x1e\n" +
	"\x1aCONNECTION_STATE_CONNECTED\x10\x02\x12\"\n" +
	"\x1eCONNECTION_STATE_DISCONNECTING\x10\x03\x12!\n" +
	"\x1dCONNECTION_STATE_DISCONNECTED\x10\x04\x12\x1b\n" +
	"\x17CONNECTION_STATE_FAILED\x10\x05*\xb2\x01\n" +
	"\tLinkState\x12\x16\n" +
	"\x12LINK_STATE_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17LINK_STATE_ESTABLISHING\x10\x01\x12\x15\n" +
	"\x11LINK_STATE_ACTIVE\x10\x02\x12\x13\n" +
	"\x0fLINK_STATE_IDLE\x10\x03\x12\x16\n" +
	"\x12LINK_STATE_CLOSING\x10\x04\x12\x15\n" +
	"\x11LINK_STATE_CLOSED\x10\x05\x12\x15\n" +
	"\x11LINK_STATE_FAILED\x10\x06B8Z6github.com/peers-touch/peers-touch-proto/v2/connectionb\x06proto3"

var (
	file_connection_proto_rawDescOnce sync.Once
	file_connection_proto_rawDescData []byte
)

func file_connection_proto_rawDescGZIP() []byte {
	file_connection_proto_rawDescOnce.Do(func() {
		file_connection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connection_proto_rawDesc), len(file_connection_proto_rawDesc)))
	})
	return file_connection_proto_rawDescData
}

var file_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_connection_proto_goTypes = []any{
	(ConnectionState)(0),            // 0: peers_touch.v2.ConnectionState
	(LinkState)(0),                  // 1: peers_touch.v2.LinkState
	(*ConnectionID)(nil),            // 2: peers_touch.v2.ConnectionID
	(*LinkID)(nil),                  // 3: peers_touch.v2.LinkID
	(*ConnectionInfo)(nil),          // 4: peers_touch.v2.ConnectionInfo
	(*LinkInfo)(nil),                // 5: peers_touch.v2.LinkInfo
	(*ConnectionOptions)(nil),       // 6: peers_touch.v2.ConnectionOptions
	(*LinkOptions)(nil),             // 7: peers_touch.v2.LinkOptions
	(*ConnectRequest)(nil),          // 8: peers_touch.v2.ConnectRequest
	(*ConnectResponse)(nil),         // 9: peers_touch.v2.ConnectResponse
	(*EstablishLinkRequest)(nil),    // 10: peers_touch.v2.EstablishLinkRequest
	(*EstablishLinkResponse)(nil),   // 11: peers_touch.v2.EstablishLinkResponse
	(*ListConnectionsRequest)(nil),  // 12: peers_touch.v2.ListConnectionsRequest
	(*ListConnectionsResponse)(nil), // 13: peers_touch.v2.ListConnectionsResponse
	(*ListLinksRequest)(nil),        // 14: peers_touch.v2.ListLinksRequest
	(*ListLinksResponse)(nil),       // 15: peers_touch.v2.ListLinksResponse
	(*CloseConnectionRequest)(nil),  // 16: peers_touch.v2.CloseConnectionRequest
	(*CloseLinkRequest)(nil),        // 17: peers_touch.v2.CloseLinkRequest
	(*PingRequest)(nil),             // 18: peers_touch.v2.PingRequest
	(*PingResponse)(nil),            // 19: peers_touch.v2.PingResponse
	nil,                             // 20: peers_touch.v2.ConnectionOptions.MetadataEntry
	nil,                             // 21: peers_touch.v2.LinkOptions.MetadataEntry
	(*identity.IdentityID)(nil),     // 22: peers_touch.v2.IdentityID
	(*timestamppb.Timestamp)(nil),   // 23: google.protobuf.Timestamp
}
var file_connection_proto_depIdxs = []int32{
	2,  // 0: peers_touch.v2.ConnectionInfo.id:type_name -> peers_touch.v2.ConnectionID
	22, // 1: peers_touch.v2.ConnectionInfo.remote_peer:type_name -> peers_touch.v2.IdentityID
	0,  // 2: peers_touch.v2.ConnectionInfo.state:type_name -> peers_touch.v2.ConnectionState
	23, // 3: peers_touch.v2.ConnectionInfo.established_at:type_name -> google.protobuf.Timestamp
	23, // 4: peers_touch.v2.ConnectionInfo.last_activity:type_name -> google.protobuf.Timestamp
	3,  // 5: peers_touch.v2.LinkInfo.id:type_name -> peers_touch.v2.LinkID
	22, // 6: peers_touch.v2.LinkInfo.local_peer:type_name -> peers_touch.v2.IdentityID
	22, // 7: peers_touch.v2.LinkInfo.remote_peer:type_name -> peers_touch.v2.IdentityID
	2,  // 8: peers_touch.v2.LinkInfo.connections:type_name -> peers_touch.v2.ConnectionID
	1,  // 9: peers_touch.v2.LinkInfo.state:type_name -> peers_touch.v2.LinkState
	23, // 10: peers_touch.v2.LinkInfo.created_at:type_name -> google.protobuf.Timestamp
	23, // 11: peers_touch.v2.LinkInfo.last_used:type_name -> google.protobuf.Timestamp
	20, // 12: peers_touch.v2.ConnectionOptions.metadata:type_name -> peers_touch.v2.ConnectionOptions.MetadataEntry
	21, // 13: peers_touch.v2.LinkOptions.metadata:type_name -> peers_touch.v2.LinkOptions.MetadataEntry
	6,  // 14: peers_touch.v2.ConnectRequest.options:type_name -> peers_touch.v2.ConnectionOptions
	4,  // 15: peers_touch.v2.ConnectResponse.connection:type_name -> peers_touch.v2.ConnectionInfo
	22, // 16: peers_touch.v2.EstablishLinkRequest.remote_peer:type_name -> peers_touch.v2.IdentityID
	7,  // 17: peers_touch.v2.EstablishLinkRequest.options:type_name -> peers_touch.v2.LinkOptions
	5,  // 18: peers_touch.v2.EstablishLinkResponse.link:type_name -> peers_touch.v2.LinkInfo
	22, // 19: peers_touch.v2.ListConnectionsRequest.peer_filter:type_name -> peers_touch.v2.IdentityID
	0,  // 20: peers_touch.v2.ListConnectionsRequest.state_filter:type_name -> peers_touch.v2.ConnectionState
	4,  // 21: peers_touch.v2.ListConnectionsResponse.connections:type_name -> peers_touch.v2.ConnectionInfo
	22, // 22: peers_touch.v2.ListLinksRequest.peer_filter:type_name -> peers_touch.v2.IdentityID
	1,  // 23: peers_touch.v2.ListLinksRequest.state_filter:type_name -> peers_touch.v2.LinkState
	5,  // 24: peers_touch.v2.ListLinksResponse.links:type_name -> peers_touch.v2.LinkInfo
	2,  // 25: peers_touch.v2.CloseConnectionRequest.connection_id:type_name -> peers_touch.v2.ConnectionID
	3,  // 26: peers_touch.v2.CloseLinkRequest.link_id:type_name -> peers_touch.v2.LinkID
	3,  // 27: peers_touch.v2.PingRequest.link_id:type_name -> peers_touch.v2.LinkID
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_connection_proto_init() }
func file_connection_proto_init() {
	if File_connection_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connection_proto_rawDesc), len(file_connection_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connection_proto_goTypes,
		DependencyIndexes: file_connection_proto_depIdxs,
		EnumInfos:         file_connection_proto_enumTypes,
		MessageInfos:      file_connection_proto_msgTypes,
	}.Build()
	File_connection_proto = out.File
	file_connection_proto_goTypes = nil
	file_connection_proto_depIdxs = nil
}
