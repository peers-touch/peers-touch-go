// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: communication.proto

package communication

import (
	connection "github.com/dirty-bro-tech/peers-touch-go/model/v2/connection"
	identity "github.com/dirty-bro-tech/peers-touch-go/model/v2/identity"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MessageType represents the type of a message.
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNKNOWN  MessageType = 0
	MessageType_MESSAGE_TYPE_TEXT     MessageType = 1
	MessageType_MESSAGE_TYPE_BINARY   MessageType = 2
	MessageType_MESSAGE_TYPE_JSON     MessageType = 3
	MessageType_MESSAGE_TYPE_PROTOBUF MessageType = 4
	MessageType_MESSAGE_TYPE_CONTROL  MessageType = 5
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNKNOWN",
		1: "MESSAGE_TYPE_TEXT",
		2: "MESSAGE_TYPE_BINARY",
		3: "MESSAGE_TYPE_JSON",
		4: "MESSAGE_TYPE_PROTOBUF",
		5: "MESSAGE_TYPE_CONTROL",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNKNOWN":  0,
		"MESSAGE_TYPE_TEXT":     1,
		"MESSAGE_TYPE_BINARY":   2,
		"MESSAGE_TYPE_JSON":     3,
		"MESSAGE_TYPE_PROTOBUF": 4,
		"MESSAGE_TYPE_CONTROL":  5,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_communication_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{0}
}

// MessagePriority represents the priority of a message.
type MessagePriority int32

const (
	MessagePriority_MESSAGE_PRIORITY_UNKNOWN MessagePriority = 0
	MessagePriority_MESSAGE_PRIORITY_LOW     MessagePriority = 1
	MessagePriority_MESSAGE_PRIORITY_NORMAL  MessagePriority = 2
	MessagePriority_MESSAGE_PRIORITY_HIGH    MessagePriority = 3
	MessagePriority_MESSAGE_PRIORITY_URGENT  MessagePriority = 4
)

// Enum value maps for MessagePriority.
var (
	MessagePriority_name = map[int32]string{
		0: "MESSAGE_PRIORITY_UNKNOWN",
		1: "MESSAGE_PRIORITY_LOW",
		2: "MESSAGE_PRIORITY_NORMAL",
		3: "MESSAGE_PRIORITY_HIGH",
		4: "MESSAGE_PRIORITY_URGENT",
	}
	MessagePriority_value = map[string]int32{
		"MESSAGE_PRIORITY_UNKNOWN": 0,
		"MESSAGE_PRIORITY_LOW":     1,
		"MESSAGE_PRIORITY_NORMAL":  2,
		"MESSAGE_PRIORITY_HIGH":    3,
		"MESSAGE_PRIORITY_URGENT":  4,
	}
)

func (x MessagePriority) Enum() *MessagePriority {
	p := new(MessagePriority)
	*p = x
	return p
}

func (x MessagePriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessagePriority) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_proto_enumTypes[1].Descriptor()
}

func (MessagePriority) Type() protoreflect.EnumType {
	return &file_communication_proto_enumTypes[1]
}

func (x MessagePriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessagePriority.Descriptor instead.
func (MessagePriority) EnumDescriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{1}
}

// DeliveryMode represents the delivery mode for messages.
type DeliveryMode int32

const (
	DeliveryMode_DELIVERY_MODE_UNKNOWN       DeliveryMode = 0
	DeliveryMode_DELIVERY_MODE_BEST_EFFORT   DeliveryMode = 1
	DeliveryMode_DELIVERY_MODE_AT_LEAST_ONCE DeliveryMode = 2
	DeliveryMode_DELIVERY_MODE_EXACTLY_ONCE  DeliveryMode = 3
)

// Enum value maps for DeliveryMode.
var (
	DeliveryMode_name = map[int32]string{
		0: "DELIVERY_MODE_UNKNOWN",
		1: "DELIVERY_MODE_BEST_EFFORT",
		2: "DELIVERY_MODE_AT_LEAST_ONCE",
		3: "DELIVERY_MODE_EXACTLY_ONCE",
	}
	DeliveryMode_value = map[string]int32{
		"DELIVERY_MODE_UNKNOWN":       0,
		"DELIVERY_MODE_BEST_EFFORT":   1,
		"DELIVERY_MODE_AT_LEAST_ONCE": 2,
		"DELIVERY_MODE_EXACTLY_ONCE":  3,
	}
)

func (x DeliveryMode) Enum() *DeliveryMode {
	p := new(DeliveryMode)
	*p = x
	return p
}

func (x DeliveryMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliveryMode) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_proto_enumTypes[2].Descriptor()
}

func (DeliveryMode) Type() protoreflect.EnumType {
	return &file_communication_proto_enumTypes[2]
}

func (x DeliveryMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliveryMode.Descriptor instead.
func (DeliveryMode) EnumDescriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{2}
}

// MessageStatus represents the status of a message.
type MessageStatus int32

const (
	MessageStatus_MESSAGE_STATUS_UNKNOWN      MessageStatus = 0
	MessageStatus_MESSAGE_STATUS_PENDING      MessageStatus = 1
	MessageStatus_MESSAGE_STATUS_SENT         MessageStatus = 2
	MessageStatus_MESSAGE_STATUS_DELIVERED    MessageStatus = 3
	MessageStatus_MESSAGE_STATUS_ACKNOWLEDGED MessageStatus = 4
	MessageStatus_MESSAGE_STATUS_FAILED       MessageStatus = 5
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_STATUS_UNKNOWN",
		1: "MESSAGE_STATUS_PENDING",
		2: "MESSAGE_STATUS_SENT",
		3: "MESSAGE_STATUS_DELIVERED",
		4: "MESSAGE_STATUS_ACKNOWLEDGED",
		5: "MESSAGE_STATUS_FAILED",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_STATUS_UNKNOWN":      0,
		"MESSAGE_STATUS_PENDING":      1,
		"MESSAGE_STATUS_SENT":         2,
		"MESSAGE_STATUS_DELIVERED":    3,
		"MESSAGE_STATUS_ACKNOWLEDGED": 4,
		"MESSAGE_STATUS_FAILED":       5,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_proto_enumTypes[3].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_communication_proto_enumTypes[3]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{3}
}

// MessageID represents a unique identifier for a message.
type MessageID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageID) Reset() {
	*x = MessageID{}
	mi := &file_communication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageID) ProtoMessage() {}

func (x *MessageID) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageID.ProtoReflect.Descriptor instead.
func (*MessageID) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{0}
}

func (x *MessageID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// StreamID represents a unique identifier for a stream.
type StreamID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamID) Reset() {
	*x = StreamID{}
	mi := &file_communication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamID) ProtoMessage() {}

func (x *StreamID) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamID.ProtoReflect.Descriptor instead.
func (*StreamID) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{1}
}

func (x *StreamID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// TopicID represents a unique identifier for a topic.
type TopicID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicID) Reset() {
	*x = TopicID{}
	mi := &file_communication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicID) ProtoMessage() {}

func (x *TopicID) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicID.ProtoReflect.Descriptor instead.
func (*TopicID) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{2}
}

func (x *TopicID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Message represents a message in the communication system.
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *MessageID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender        *identity.IdentityID   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipients    []*identity.IdentityID `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	Type          MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=peers_touch.v2.MessageType" json:"type,omitempty"`
	Priority      MessagePriority        `protobuf:"varint,5,opt,name=priority,proto3,enum=peers_touch.v2.MessagePriority" json:"priority,omitempty"`
	Payload       []byte                 `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`              // optional
	CorrelationId string                 `protobuf:"bytes,10,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"` // optional
	ReplyTo       string                 `protobuf:"bytes,11,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`                   // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_communication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetId() *MessageID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Message) GetSender() *identity.IdentityID {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Message) GetRecipients() []*identity.IdentityID {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNKNOWN
}

func (x *Message) GetPriority() MessagePriority {
	if x != nil {
		return x.Priority
	}
	return MessagePriority_MESSAGE_PRIORITY_UNKNOWN
}

func (x *Message) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Message) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Message) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Message) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *Message) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

// StreamInfo contains metadata about a stream.
type StreamInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              *StreamID              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocalPeer       *identity.IdentityID   `protobuf:"bytes,2,opt,name=local_peer,json=localPeer,proto3" json:"local_peer,omitempty"`
	RemotePeer      *identity.IdentityID   `protobuf:"bytes,3,opt,name=remote_peer,json=remotePeer,proto3" json:"remote_peer,omitempty"`
	LinkId          *connection.LinkID     `protobuf:"bytes,4,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	Protocol        string                 `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	IsBidirectional bool                   `protobuf:"varint,6,opt,name=is_bidirectional,json=isBidirectional,proto3" json:"is_bidirectional,omitempty"`
	IsReliable      bool                   `protobuf:"varint,7,opt,name=is_reliable,json=isReliable,proto3" json:"is_reliable,omitempty"`
	IsOrdered       bool                   `protobuf:"varint,8,opt,name=is_ordered,json=isOrdered,proto3" json:"is_ordered,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastActivity    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	BytesSent       uint64                 `protobuf:"varint,11,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   uint64                 `protobuf:"varint,12,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	mi := &file_communication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{4}
}

func (x *StreamInfo) GetId() *StreamID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StreamInfo) GetLocalPeer() *identity.IdentityID {
	if x != nil {
		return x.LocalPeer
	}
	return nil
}

func (x *StreamInfo) GetRemotePeer() *identity.IdentityID {
	if x != nil {
		return x.RemotePeer
	}
	return nil
}

func (x *StreamInfo) GetLinkId() *connection.LinkID {
	if x != nil {
		return x.LinkId
	}
	return nil
}

func (x *StreamInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *StreamInfo) GetIsBidirectional() bool {
	if x != nil {
		return x.IsBidirectional
	}
	return false
}

func (x *StreamInfo) GetIsReliable() bool {
	if x != nil {
		return x.IsReliable
	}
	return false
}

func (x *StreamInfo) GetIsOrdered() bool {
	if x != nil {
		return x.IsOrdered
	}
	return false
}

func (x *StreamInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StreamInfo) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

func (x *StreamInfo) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *StreamInfo) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

// TopicInfo contains metadata about a topic.
type TopicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *TopicID               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Subscribers   []*identity.IdentityID `protobuf:"bytes,4,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
	Publishers    []*identity.IdentityID `protobuf:"bytes,5,rep,name=publishers,proto3" json:"publishers,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MessageCount  uint64                 `protobuf:"varint,7,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	mi := &file_communication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{5}
}

func (x *TopicInfo) GetId() *TopicID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TopicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TopicInfo) GetSubscribers() []*identity.IdentityID {
	if x != nil {
		return x.Subscribers
	}
	return nil
}

func (x *TopicInfo) GetPublishers() []*identity.IdentityID {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *TopicInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TopicInfo) GetMessageCount() uint64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *TopicInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SendOptions contains options for sending messages.
type SendOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Priority      MessagePriority        `protobuf:"varint,1,opt,name=priority,proto3,enum=peers_touch.v2.MessagePriority" json:"priority,omitempty"`
	DeliveryMode  DeliveryMode           `protobuf:"varint,2,opt,name=delivery_mode,json=deliveryMode,proto3,enum=peers_touch.v2.DeliveryMode" json:"delivery_mode,omitempty"`
	TimeoutMs     int64                  `protobuf:"varint,3,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // Timeout in milliseconds
	MaxRetries    int32                  `protobuf:"varint,4,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RequireAck    bool                   `protobuf:"varint,5,opt,name=require_ack,json=requireAck,proto3" json:"require_ack,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendOptions) Reset() {
	*x = SendOptions{}
	mi := &file_communication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOptions) ProtoMessage() {}

func (x *SendOptions) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOptions.ProtoReflect.Descriptor instead.
func (*SendOptions) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{6}
}

func (x *SendOptions) GetPriority() MessagePriority {
	if x != nil {
		return x.Priority
	}
	return MessagePriority_MESSAGE_PRIORITY_UNKNOWN
}

func (x *SendOptions) GetDeliveryMode() DeliveryMode {
	if x != nil {
		return x.DeliveryMode
	}
	return DeliveryMode_DELIVERY_MODE_UNKNOWN
}

func (x *SendOptions) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *SendOptions) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *SendOptions) GetRequireAck() bool {
	if x != nil {
		return x.RequireAck
	}
	return false
}

func (x *SendOptions) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// ReceiveOptions contains options for receiving messages.
type ReceiveOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeoutMs     int64                  `protobuf:"varint,1,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // Timeout in milliseconds
	MaxMessages   int32                  `protobuf:"varint,2,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`
	TypeFilter    MessageType            `protobuf:"varint,3,opt,name=type_filter,json=typeFilter,proto3,enum=peers_touch.v2.MessageType" json:"type_filter,omitempty"` // optional filter by type
	SenderFilter  *identity.IdentityID   `protobuf:"bytes,4,opt,name=sender_filter,json=senderFilter,proto3" json:"sender_filter,omitempty"`                            // optional filter by sender
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveOptions) Reset() {
	*x = ReceiveOptions{}
	mi := &file_communication_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveOptions) ProtoMessage() {}

func (x *ReceiveOptions) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveOptions.ProtoReflect.Descriptor instead.
func (*ReceiveOptions) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveOptions) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *ReceiveOptions) GetMaxMessages() int32 {
	if x != nil {
		return x.MaxMessages
	}
	return 0
}

func (x *ReceiveOptions) GetTypeFilter() MessageType {
	if x != nil {
		return x.TypeFilter
	}
	return MessageType_MESSAGE_TYPE_UNKNOWN
}

func (x *ReceiveOptions) GetSenderFilter() *identity.IdentityID {
	if x != nil {
		return x.SenderFilter
	}
	return nil
}

// StreamOptions contains options for creating streams.
type StreamOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Protocol      string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Bidirectional bool                   `protobuf:"varint,2,opt,name=bidirectional,proto3" json:"bidirectional,omitempty"`
	Reliable      bool                   `protobuf:"varint,3,opt,name=reliable,proto3" json:"reliable,omitempty"`
	Ordered       bool                   `protobuf:"varint,4,opt,name=ordered,proto3" json:"ordered,omitempty"`
	BufferSize    int32                  `protobuf:"varint,5,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamOptions) Reset() {
	*x = StreamOptions{}
	mi := &file_communication_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOptions) ProtoMessage() {}

func (x *StreamOptions) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOptions.ProtoReflect.Descriptor instead.
func (*StreamOptions) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{8}
}

func (x *StreamOptions) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *StreamOptions) GetBidirectional() bool {
	if x != nil {
		return x.Bidirectional
	}
	return false
}

func (x *StreamOptions) GetReliable() bool {
	if x != nil {
		return x.Reliable
	}
	return false
}

func (x *StreamOptions) GetOrdered() bool {
	if x != nil {
		return x.Ordered
	}
	return false
}

func (x *StreamOptions) GetBufferSize() int32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *StreamOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SubscribeOptions contains options for subscribing to topics.
type SubscribeOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeFilter    MessageType            `protobuf:"varint,1,opt,name=type_filter,json=typeFilter,proto3,enum=peers_touch.v2.MessageType" json:"type_filter,omitempty"` // optional filter by type
	SenderFilter  *identity.IdentityID   `protobuf:"bytes,2,opt,name=sender_filter,json=senderFilter,proto3" json:"sender_filter,omitempty"`                            // optional filter by sender
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeOptions) Reset() {
	*x = SubscribeOptions{}
	mi := &file_communication_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOptions) ProtoMessage() {}

func (x *SubscribeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOptions.ProtoReflect.Descriptor instead.
func (*SubscribeOptions) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeOptions) GetTypeFilter() MessageType {
	if x != nil {
		return x.TypeFilter
	}
	return MessageType_MESSAGE_TYPE_UNKNOWN
}

func (x *SubscribeOptions) GetSenderFilter() *identity.IdentityID {
	if x != nil {
		return x.SenderFilter
	}
	return nil
}

func (x *SubscribeOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SendRequest represents a request to send a message.
type SendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Options       *SendOptions           `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	mi := &file_communication_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{10}
}

func (x *SendRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendRequest) GetOptions() *SendOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// SendResponse represents the response to a send request.
type SendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     *MessageID             `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Status        MessageStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=peers_touch.v2.MessageStatus" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_communication_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{11}
}

func (x *SendResponse) GetMessageId() *MessageID {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendResponse) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_MESSAGE_STATUS_UNKNOWN
}

func (x *SendResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ReceiveRequest represents a request to receive messages.
type ReceiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *ReceiveOptions        `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveRequest) Reset() {
	*x = ReceiveRequest{}
	mi := &file_communication_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRequest) ProtoMessage() {}

func (x *ReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRequest.ProtoReflect.Descriptor instead.
func (*ReceiveRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{12}
}

func (x *ReceiveRequest) GetOptions() *ReceiveOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// ReceiveResponse represents the response to a receive request.
type ReceiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveResponse) Reset() {
	*x = ReceiveResponse{}
	mi := &file_communication_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResponse) ProtoMessage() {}

func (x *ReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResponse.ProtoReflect.Descriptor instead.
func (*ReceiveResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{13}
}

func (x *ReceiveResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

// CreateStreamRequest represents a request to create a stream.
type CreateStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemotePeer    *identity.IdentityID   `protobuf:"bytes,1,opt,name=remote_peer,json=remotePeer,proto3" json:"remote_peer,omitempty"`
	LinkId        *connection.LinkID     `protobuf:"bytes,2,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	Options       *StreamOptions         `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStreamRequest) Reset() {
	*x = CreateStreamRequest{}
	mi := &file_communication_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamRequest) ProtoMessage() {}

func (x *CreateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateStreamRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{14}
}

func (x *CreateStreamRequest) GetRemotePeer() *identity.IdentityID {
	if x != nil {
		return x.RemotePeer
	}
	return nil
}

func (x *CreateStreamRequest) GetLinkId() *connection.LinkID {
	if x != nil {
		return x.LinkId
	}
	return nil
}

func (x *CreateStreamRequest) GetOptions() *StreamOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// CreateStreamResponse represents the response to a stream creation request.
type CreateStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stream        *StreamInfo            `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStreamResponse) Reset() {
	*x = CreateStreamResponse{}
	mi := &file_communication_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamResponse) ProtoMessage() {}

func (x *CreateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamResponse.ProtoReflect.Descriptor instead.
func (*CreateStreamResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{15}
}

func (x *CreateStreamResponse) GetStream() *StreamInfo {
	if x != nil {
		return x.Stream
	}
	return nil
}

func (x *CreateStreamResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// WriteStreamRequest represents a request to write data to a stream.
type WriteStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      *StreamID              `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteStreamRequest) Reset() {
	*x = WriteStreamRequest{}
	mi := &file_communication_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStreamRequest) ProtoMessage() {}

func (x *WriteStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStreamRequest.ProtoReflect.Descriptor instead.
func (*WriteStreamRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{16}
}

func (x *WriteStreamRequest) GetStreamId() *StreamID {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *WriteStreamRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ReadStreamRequest represents a request to read data from a stream.
type ReadStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      *StreamID              `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	MaxBytes      int32                  `protobuf:"varint,2,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadStreamRequest) Reset() {
	*x = ReadStreamRequest{}
	mi := &file_communication_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadStreamRequest) ProtoMessage() {}

func (x *ReadStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadStreamRequest.ProtoReflect.Descriptor instead.
func (*ReadStreamRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{17}
}

func (x *ReadStreamRequest) GetStreamId() *StreamID {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *ReadStreamRequest) GetMaxBytes() int32 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

// ReadStreamResponse represents the response to a stream read request.
type ReadStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Eof           bool                   `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadStreamResponse) Reset() {
	*x = ReadStreamResponse{}
	mi := &file_communication_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadStreamResponse) ProtoMessage() {}

func (x *ReadStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadStreamResponse.ProtoReflect.Descriptor instead.
func (*ReadStreamResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{18}
}

func (x *ReadStreamResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadStreamResponse) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

// CloseStreamRequest represents a request to close a stream.
type CloseStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      *StreamID              `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseStreamRequest) Reset() {
	*x = CloseStreamRequest{}
	mi := &file_communication_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseStreamRequest) ProtoMessage() {}

func (x *CloseStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseStreamRequest.ProtoReflect.Descriptor instead.
func (*CloseStreamRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{19}
}

func (x *CloseStreamRequest) GetStreamId() *StreamID {
	if x != nil {
		return x.StreamId
	}
	return nil
}

// SubscribeRequest represents a request to subscribe to a topic.
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       *TopicID               `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Options       *SubscribeOptions      `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_communication_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeRequest) GetTopicId() *TopicID {
	if x != nil {
		return x.TopicId
	}
	return nil
}

func (x *SubscribeRequest) GetOptions() *SubscribeOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// UnsubscribeRequest represents a request to unsubscribe from a topic.
type UnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       *TopicID               `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	mi := &file_communication_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{21}
}

func (x *UnsubscribeRequest) GetTopicId() *TopicID {
	if x != nil {
		return x.TopicId
	}
	return nil
}

// PublishRequest represents a request to publish a message to a topic.
type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       *TopicID               `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Message       *Message               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_communication_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{22}
}

func (x *PublishRequest) GetTopicId() *TopicID {
	if x != nil {
		return x.TopicId
	}
	return nil
}

func (x *PublishRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// PublishResponse represents the response to a publish request.
type PublishResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MessageId       *MessageID             `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SubscriberCount int32                  `protobuf:"varint,2,opt,name=subscriber_count,json=subscriberCount,proto3" json:"subscriber_count,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_communication_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{23}
}

func (x *PublishResponse) GetMessageId() *MessageID {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *PublishResponse) GetSubscriberCount() int32 {
	if x != nil {
		return x.SubscriberCount
	}
	return 0
}

func (x *PublishResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ListTopicsRequest represents a request to list available topics.
type ListTopicsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameFilter    string                 `protobuf:"bytes,1,opt,name=name_filter,json=nameFilter,proto3" json:"name_filter,omitempty"` // optional filter by name pattern
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsRequest) Reset() {
	*x = ListTopicsRequest{}
	mi := &file_communication_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsRequest) ProtoMessage() {}

func (x *ListTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsRequest.ProtoReflect.Descriptor instead.
func (*ListTopicsRequest) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{24}
}

func (x *ListTopicsRequest) GetNameFilter() string {
	if x != nil {
		return x.NameFilter
	}
	return ""
}

// ListTopicsResponse represents the response to list topics.
type ListTopicsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []*TopicInfo           `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTopicsResponse) Reset() {
	*x = ListTopicsResponse{}
	mi := &file_communication_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopicsResponse) ProtoMessage() {}

func (x *ListTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopicsResponse.ProtoReflect.Descriptor instead.
func (*ListTopicsResponse) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{25}
}

func (x *ListTopicsResponse) GetTopics() []*TopicInfo {
	if x != nil {
		return x.Topics
	}
	return nil
}

// MessageAck represents an acknowledgment for a received message.
type MessageAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     *MessageID             `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Recipient     *identity.IdentityID   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAck) Reset() {
	*x = MessageAck{}
	mi := &file_communication_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAck) ProtoMessage() {}

func (x *MessageAck) ProtoReflect() protoreflect.Message {
	mi := &file_communication_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAck.ProtoReflect.Descriptor instead.
func (*MessageAck) Descriptor() ([]byte, []int) {
	return file_communication_proto_rawDescGZIP(), []int{26}
}

func (x *MessageAck) GetMessageId() *MessageID {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *MessageAck) GetRecipient() *identity.IdentityID {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *MessageAck) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_communication_proto protoreflect.FileDescriptor

const file_communication_proto_rawDesc = "" +
	"\n" +
	"\x13communication.proto\x12\x0epeers_touch.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\x1a\x0eidentity.proto\x1a\x10connection.proto\"!\n" +
	"\tMessageID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\" \n" +
	"\bStreamID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1f\n" +
	"\aTopicID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xe0\x04\n" +
	"\aMessage\x12)\n" +
	"\x02id\x18\x01 \x01(\v2\x19.peers_touch.v2.MessageIDR\x02id\x122\n" +
	"\x06sender\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\x06sender\x12:\n" +
	"\n" +
	"recipients\x18\x03 \x03(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"recipients\x12/\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1b.peers_touch.v2.MessageTypeR\x04type\x12;\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x1f.peers_touch.v2.MessagePriorityR\bpriority\x12\x18\n" +
	"\apayload\x18\x06 \x01(\fR\apayload\x12>\n" +
	"\aheaders\x18\a \x03(\v2$.peers_touch.v2.Message.HeadersEntryR\aheaders\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12%\n" +
	"\x0ecorrelation_id\x18\n" +
	" \x01(\tR\rcorrelationId\x12\x19\n" +
	"\breply_to\x18\v \x01(\tR\areplyTo\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa8\x04\n" +
	"\n" +
	"StreamInfo\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.peers_touch.v2.StreamIDR\x02id\x129\n" +
	"\n" +
	"local_peer\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\tlocalPeer\x12;\n" +
	"\vremote_peer\x18\x03 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"remotePeer\x12/\n" +
	"\alink_id\x18\x04 \x01(\v2\x16.peers_touch.v2.LinkIDR\x06linkId\x12\x1a\n" +
	"\bprotocol\x18\x05 \x01(\tR\bprotocol\x12)\n" +
	"\x10is_bidirectional\x18\x06 \x01(\bR\x0fisBidirectional\x12\x1f\n" +
	"\vis_reliable\x18\a \x01(\bR\n" +
	"isReliable\x12\x1d\n" +
	"\n" +
	"is_ordered\x18\b \x01(\bR\tisOrdered\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_activity\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\flastActivity\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\v \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\f \x01(\x04R\rbytesReceived\"\xc6\x03\n" +
	"\tTopicInfo\x12'\n" +
	"\x02id\x18\x01 \x01(\v2\x17.peers_touch.v2.TopicIDR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12<\n" +
	"\vsubscribers\x18\x04 \x03(\v2\x1a.peers_touch.v2.IdentityIDR\vsubscribers\x12:\n" +
	"\n" +
	"publishers\x18\x05 \x03(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"publishers\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12#\n" +
	"\rmessage_count\x18\a \x01(\x04R\fmessageCount\x12C\n" +
	"\bmetadata\x18\b \x03(\v2'.peers_touch.v2.TopicInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xee\x02\n" +
	"\vSendOptions\x12;\n" +
	"\bpriority\x18\x01 \x01(\x0e2\x1f.peers_touch.v2.MessagePriorityR\bpriority\x12A\n" +
	"\rdelivery_mode\x18\x02 \x01(\x0e2\x1c.peers_touch.v2.DeliveryModeR\fdeliveryMode\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x03 \x01(\x03R\ttimeoutMs\x12\x1f\n" +
	"\vmax_retries\x18\x04 \x01(\x05R\n" +
	"maxRetries\x12\x1f\n" +
	"\vrequire_ack\x18\x05 \x01(\bR\n" +
	"requireAck\x12B\n" +
	"\aheaders\x18\x06 \x03(\v2(.peers_touch.v2.SendOptions.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd1\x01\n" +
	"\x0eReceiveOptions\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x01 \x01(\x03R\ttimeoutMs\x12!\n" +
	"\fmax_messages\x18\x02 \x01(\x05R\vmaxMessages\x12<\n" +
	"\vtype_filter\x18\x03 \x01(\x0e2\x1b.peers_touch.v2.MessageTypeR\n" +
	"typeFilter\x12?\n" +
	"\rsender_filter\x18\x04 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\fsenderFilter\"\xae\x02\n" +
	"\rStreamOptions\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12$\n" +
	"\rbidirectional\x18\x02 \x01(\bR\rbidirectional\x12\x1a\n" +
	"\breliable\x18\x03 \x01(\bR\breliable\x12\x18\n" +
	"\aordered\x18\x04 \x01(\bR\aordered\x12\x1f\n" +
	"\vbuffer_size\x18\x05 \x01(\x05R\n" +
	"bufferSize\x12G\n" +
	"\bmetadata\x18\x06 \x03(\v2+.peers_touch.v2.StreamOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x02\n" +
	"\x10SubscribeOptions\x12<\n" +
	"\vtype_filter\x18\x01 \x01(\x0e2\x1b.peers_touch.v2.MessageTypeR\n" +
	"typeFilter\x12?\n" +
	"\rsender_filter\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\fsenderFilter\x12J\n" +
	"\bmetadata\x18\x03 \x03(\v2..peers_touch.v2.SubscribeOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"w\n" +
	"\vSendRequest\x121\n" +
	"\amessage\x18\x01 \x01(\v2\x17.peers_touch.v2.MessageR\amessage\x125\n" +
	"\aoptions\x18\x02 \x01(\v2\x1b.peers_touch.v2.SendOptionsR\aoptions\"\xa4\x01\n" +
	"\fSendResponse\x128\n" +
	"\n" +
	"message_id\x18\x01 \x01(\v2\x19.peers_touch.v2.MessageIDR\tmessageId\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.peers_touch.v2.MessageStatusR\x06status\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"J\n" +
	"\x0eReceiveRequest\x128\n" +
	"\aoptions\x18\x01 \x01(\v2\x1e.peers_touch.v2.ReceiveOptionsR\aoptions\"F\n" +
	"\x0fReceiveResponse\x123\n" +
	"\bmessages\x18\x01 \x03(\v2\x17.peers_touch.v2.MessageR\bmessages\"\xbc\x01\n" +
	"\x13CreateStreamRequest\x12;\n" +
	"\vremote_peer\x18\x01 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\n" +
	"remotePeer\x12/\n" +
	"\alink_id\x18\x02 \x01(\v2\x16.peers_touch.v2.LinkIDR\x06linkId\x127\n" +
	"\aoptions\x18\x03 \x01(\v2\x1d.peers_touch.v2.StreamOptionsR\aoptions\"o\n" +
	"\x14CreateStreamResponse\x122\n" +
	"\x06stream\x18\x01 \x01(\v2\x1a.peers_touch.v2.StreamInfoR\x06stream\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"_\n" +
	"\x12WriteStreamRequest\x125\n" +
	"\tstream_id\x18\x01 \x01(\v2\x18.peers_touch.v2.StreamIDR\bstreamId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"g\n" +
	"\x11ReadStreamRequest\x125\n" +
	"\tstream_id\x18\x01 \x01(\v2\x18.peers_touch.v2.StreamIDR\bstreamId\x12\x1b\n" +
	"\tmax_bytes\x18\x02 \x01(\x05R\bmaxBytes\":\n" +
	"\x12ReadStreamResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x10\n" +
	"\x03eof\x18\x02 \x01(\bR\x03eof\"K\n" +
	"\x12CloseStreamRequest\x125\n" +
	"\tstream_id\x18\x01 \x01(\v2\x18.peers_touch.v2.StreamIDR\bstreamId\"\x82\x01\n" +
	"\x10SubscribeRequest\x122\n" +
	"\btopic_id\x18\x01 \x01(\v2\x17.peers_touch.v2.TopicIDR\atopicId\x12:\n" +
	"\aoptions\x18\x02 \x01(\v2 .peers_touch.v2.SubscribeOptionsR\aoptions\"H\n" +
	"\x12UnsubscribeRequest\x122\n" +
	"\btopic_id\x18\x01 \x01(\v2\x17.peers_touch.v2.TopicIDR\atopicId\"w\n" +
	"\x0ePublishRequest\x122\n" +
	"\btopic_id\x18\x01 \x01(\v2\x17.peers_touch.v2.TopicIDR\atopicId\x121\n" +
	"\amessage\x18\x02 \x01(\v2\x17.peers_touch.v2.MessageR\amessage\"\x9b\x01\n" +
	"\x0fPublishResponse\x128\n" +
	"\n" +
	"message_id\x18\x01 \x01(\v2\x19.peers_touch.v2.MessageIDR\tmessageId\x12)\n" +
	"\x10subscriber_count\x18\x02 \x01(\x05R\x0fsubscriberCount\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"4\n" +
	"\x11ListTopicsRequest\x12\x1f\n" +
	"\vname_filter\x18\x01 \x01(\tR\n" +
	"nameFilter\"G\n" +
	"\x12ListTopicsResponse\x121\n" +
	"\x06topics\x18\x01 \x03(\v2\x19.peers_touch.v2.TopicInfoR\x06topics\"\xba\x01\n" +
	"\n" +
	"MessageAck\x128\n" +
	"\n" +
	"message_id\x18\x01 \x01(\v2\x19.peers_touch.v2.MessageIDR\tmessageId\x128\n" +
	"\trecipient\x18\x02 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\trecipient\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*\xa3\x01\n" +
	"\vMessageType\x12\x18\n" +
	"\x14MESSAGE_TYPE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11MESSAGE_TYPE_TEXT\x10\x01\x12\x17\n" +
	"\x13MESSAGE_TYPE_BINARY\x10\x02\x12\x15\n" +
	"\x11MESSAGE_TYPE_JSON\x10\x03\x12\x19\n" +
	"\x15MESSAGE_TYPE_PROTOBUF\x10\x04\x12\x18\n" +
	"\x14MESSAGE_TYPE_CONTROL\x10\x05*\x9e\x01\n" +
	"\x0fMessagePriority\x12\x1c\n" +
	"\x18MESSAGE_PRIORITY_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14MESSAGE_PRIORITY_LOW\x10\x01\x12\x1b\n" +
	"\x17MESSAGE_PRIORITY_NORMAL\x10\x02\x12\x19\n" +
	"\x15MESSAGE_PRIORITY_HIGH\x10\x03\x12\x1b\n" +
	"\x17MESSAGE_PRIORITY_URGENT\x10\x04*\x89\x01\n" +
	"\fDeliveryMode\x12\x19\n" +
	"\x15DELIVERY_MODE_UNKNOWN\x10\x00\x12\x1d\n" +
	"\x19DELIVERY_MODE_BEST_EFFORT\x10\x01\x12\x1f\n" +
	"\x1bDELIVERY_MODE_AT_LEAST_ONCE\x10\x02\x12\x1e\n" +
	"\x1aDELIVERY_MODE_EXACTLY_ONCE\x10\x03*\xba\x01\n" +
	"\rMessageStatus\x12\x1a\n" +
	"\x16MESSAGE_STATUS_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16MESSAGE_STATUS_PENDING\x10\x01\x12\x17\n" +
	"\x13MESSAGE_STATUS_SENT\x10\x02\x12\x1c\n" +
	"\x18MESSAGE_STATUS_DELIVERED\x10\x03\x12\x1f\n" +
	"\x1bMESSAGE_STATUS_ACKNOWLEDGED\x10\x04\x12\x19\n" +
	"\x15MESSAGE_STATUS_FAILED\x10\x05B;Z9github.com/peers-touch/peers-touch-proto/v2/communicationb\x06proto3"

var (
	file_communication_proto_rawDescOnce sync.Once
	file_communication_proto_rawDescData []byte
)

func file_communication_proto_rawDescGZIP() []byte {
	file_communication_proto_rawDescOnce.Do(func() {
		file_communication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_communication_proto_rawDesc), len(file_communication_proto_rawDesc)))
	})
	return file_communication_proto_rawDescData
}

var file_communication_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_communication_proto_goTypes = []any{
	(MessageType)(0),              // 0: peers_touch.v2.MessageType
	(MessagePriority)(0),          // 1: peers_touch.v2.MessagePriority
	(DeliveryMode)(0),             // 2: peers_touch.v2.DeliveryMode
	(MessageStatus)(0),            // 3: peers_touch.v2.MessageStatus
	(*MessageID)(nil),             // 4: peers_touch.v2.MessageID
	(*StreamID)(nil),              // 5: peers_touch.v2.StreamID
	(*TopicID)(nil),               // 6: peers_touch.v2.TopicID
	(*Message)(nil),               // 7: peers_touch.v2.Message
	(*StreamInfo)(nil),            // 8: peers_touch.v2.StreamInfo
	(*TopicInfo)(nil),             // 9: peers_touch.v2.TopicInfo
	(*SendOptions)(nil),           // 10: peers_touch.v2.SendOptions
	(*ReceiveOptions)(nil),        // 11: peers_touch.v2.ReceiveOptions
	(*StreamOptions)(nil),         // 12: peers_touch.v2.StreamOptions
	(*SubscribeOptions)(nil),      // 13: peers_touch.v2.SubscribeOptions
	(*SendRequest)(nil),           // 14: peers_touch.v2.SendRequest
	(*SendResponse)(nil),          // 15: peers_touch.v2.SendResponse
	(*ReceiveRequest)(nil),        // 16: peers_touch.v2.ReceiveRequest
	(*ReceiveResponse)(nil),       // 17: peers_touch.v2.ReceiveResponse
	(*CreateStreamRequest)(nil),   // 18: peers_touch.v2.CreateStreamRequest
	(*CreateStreamResponse)(nil),  // 19: peers_touch.v2.CreateStreamResponse
	(*WriteStreamRequest)(nil),    // 20: peers_touch.v2.WriteStreamRequest
	(*ReadStreamRequest)(nil),     // 21: peers_touch.v2.ReadStreamRequest
	(*ReadStreamResponse)(nil),    // 22: peers_touch.v2.ReadStreamResponse
	(*CloseStreamRequest)(nil),    // 23: peers_touch.v2.CloseStreamRequest
	(*SubscribeRequest)(nil),      // 24: peers_touch.v2.SubscribeRequest
	(*UnsubscribeRequest)(nil),    // 25: peers_touch.v2.UnsubscribeRequest
	(*PublishRequest)(nil),        // 26: peers_touch.v2.PublishRequest
	(*PublishResponse)(nil),       // 27: peers_touch.v2.PublishResponse
	(*ListTopicsRequest)(nil),     // 28: peers_touch.v2.ListTopicsRequest
	(*ListTopicsResponse)(nil),    // 29: peers_touch.v2.ListTopicsResponse
	(*MessageAck)(nil),            // 30: peers_touch.v2.MessageAck
	nil,                           // 31: peers_touch.v2.Message.HeadersEntry
	nil,                           // 32: peers_touch.v2.TopicInfo.MetadataEntry
	nil,                           // 33: peers_touch.v2.SendOptions.HeadersEntry
	nil,                           // 34: peers_touch.v2.StreamOptions.MetadataEntry
	nil,                           // 35: peers_touch.v2.SubscribeOptions.MetadataEntry
	(*identity.IdentityID)(nil),   // 36: peers_touch.v2.IdentityID
	(*timestamppb.Timestamp)(nil), // 37: google.protobuf.Timestamp
	(*connection.LinkID)(nil),     // 38: peers_touch.v2.LinkID
}
var file_communication_proto_depIdxs = []int32{
	4,  // 0: peers_touch.v2.Message.id:type_name -> peers_touch.v2.MessageID
	36, // 1: peers_touch.v2.Message.sender:type_name -> peers_touch.v2.IdentityID
	36, // 2: peers_touch.v2.Message.recipients:type_name -> peers_touch.v2.IdentityID
	0,  // 3: peers_touch.v2.Message.type:type_name -> peers_touch.v2.MessageType
	1,  // 4: peers_touch.v2.Message.priority:type_name -> peers_touch.v2.MessagePriority
	31, // 5: peers_touch.v2.Message.headers:type_name -> peers_touch.v2.Message.HeadersEntry
	37, // 6: peers_touch.v2.Message.created_at:type_name -> google.protobuf.Timestamp
	37, // 7: peers_touch.v2.Message.expires_at:type_name -> google.protobuf.Timestamp
	5,  // 8: peers_touch.v2.StreamInfo.id:type_name -> peers_touch.v2.StreamID
	36, // 9: peers_touch.v2.StreamInfo.local_peer:type_name -> peers_touch.v2.IdentityID
	36, // 10: peers_touch.v2.StreamInfo.remote_peer:type_name -> peers_touch.v2.IdentityID
	38, // 11: peers_touch.v2.StreamInfo.link_id:type_name -> peers_touch.v2.LinkID
	37, // 12: peers_touch.v2.StreamInfo.created_at:type_name -> google.protobuf.Timestamp
	37, // 13: peers_touch.v2.StreamInfo.last_activity:type_name -> google.protobuf.Timestamp
	6,  // 14: peers_touch.v2.TopicInfo.id:type_name -> peers_touch.v2.TopicID
	36, // 15: peers_touch.v2.TopicInfo.subscribers:type_name -> peers_touch.v2.IdentityID
	36, // 16: peers_touch.v2.TopicInfo.publishers:type_name -> peers_touch.v2.IdentityID
	37, // 17: peers_touch.v2.TopicInfo.created_at:type_name -> google.protobuf.Timestamp
	32, // 18: peers_touch.v2.TopicInfo.metadata:type_name -> peers_touch.v2.TopicInfo.MetadataEntry
	1,  // 19: peers_touch.v2.SendOptions.priority:type_name -> peers_touch.v2.MessagePriority
	2,  // 20: peers_touch.v2.SendOptions.delivery_mode:type_name -> peers_touch.v2.DeliveryMode
	33, // 21: peers_touch.v2.SendOptions.headers:type_name -> peers_touch.v2.SendOptions.HeadersEntry
	0,  // 22: peers_touch.v2.ReceiveOptions.type_filter:type_name -> peers_touch.v2.MessageType
	36, // 23: peers_touch.v2.ReceiveOptions.sender_filter:type_name -> peers_touch.v2.IdentityID
	34, // 24: peers_touch.v2.StreamOptions.metadata:type_name -> peers_touch.v2.StreamOptions.MetadataEntry
	0,  // 25: peers_touch.v2.SubscribeOptions.type_filter:type_name -> peers_touch.v2.MessageType
	36, // 26: peers_touch.v2.SubscribeOptions.sender_filter:type_name -> peers_touch.v2.IdentityID
	35, // 27: peers_touch.v2.SubscribeOptions.metadata:type_name -> peers_touch.v2.SubscribeOptions.MetadataEntry
	7,  // 28: peers_touch.v2.SendRequest.message:type_name -> peers_touch.v2.Message
	10, // 29: peers_touch.v2.SendRequest.options:type_name -> peers_touch.v2.SendOptions
	4,  // 30: peers_touch.v2.SendResponse.message_id:type_name -> peers_touch.v2.MessageID
	3,  // 31: peers_touch.v2.SendResponse.status:type_name -> peers_touch.v2.MessageStatus
	11, // 32: peers_touch.v2.ReceiveRequest.options:type_name -> peers_touch.v2.ReceiveOptions
	7,  // 33: peers_touch.v2.ReceiveResponse.messages:type_name -> peers_touch.v2.Message
	36, // 34: peers_touch.v2.CreateStreamRequest.remote_peer:type_name -> peers_touch.v2.IdentityID
	38, // 35: peers_touch.v2.CreateStreamRequest.link_id:type_name -> peers_touch.v2.LinkID
	12, // 36: peers_touch.v2.CreateStreamRequest.options:type_name -> peers_touch.v2.StreamOptions
	8,  // 37: peers_touch.v2.CreateStreamResponse.stream:type_name -> peers_touch.v2.StreamInfo
	5,  // 38: peers_touch.v2.WriteStreamRequest.stream_id:type_name -> peers_touch.v2.StreamID
	5,  // 39: peers_touch.v2.ReadStreamRequest.stream_id:type_name -> peers_touch.v2.StreamID
	5,  // 40: peers_touch.v2.CloseStreamRequest.stream_id:type_name -> peers_touch.v2.StreamID
	6,  // 41: peers_touch.v2.SubscribeRequest.topic_id:type_name -> peers_touch.v2.TopicID
	13, // 42: peers_touch.v2.SubscribeRequest.options:type_name -> peers_touch.v2.SubscribeOptions
	6,  // 43: peers_touch.v2.UnsubscribeRequest.topic_id:type_name -> peers_touch.v2.TopicID
	6,  // 44: peers_touch.v2.PublishRequest.topic_id:type_name -> peers_touch.v2.TopicID
	7,  // 45: peers_touch.v2.PublishRequest.message:type_name -> peers_touch.v2.Message
	4,  // 46: peers_touch.v2.PublishResponse.message_id:type_name -> peers_touch.v2.MessageID
	9,  // 47: peers_touch.v2.ListTopicsResponse.topics:type_name -> peers_touch.v2.TopicInfo
	4,  // 48: peers_touch.v2.MessageAck.message_id:type_name -> peers_touch.v2.MessageID
	36, // 49: peers_touch.v2.MessageAck.recipient:type_name -> peers_touch.v2.IdentityID
	37, // 50: peers_touch.v2.MessageAck.timestamp:type_name -> google.protobuf.Timestamp
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_communication_proto_init() }
func file_communication_proto_init() {
	if File_communication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_communication_proto_rawDesc), len(file_communication_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_communication_proto_goTypes,
		DependencyIndexes: file_communication_proto_depIdxs,
		EnumInfos:         file_communication_proto_enumTypes,
		MessageInfos:      file_communication_proto_msgTypes,
	}.Build()
	File_communication_proto = out.File
	file_communication_proto_goTypes = nil
	file_communication_proto_depIdxs = nil
}
