// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: discovery.proto

package discovery

import (
	identity "github.com/dirty-bro-tech/peers-touch-go/model/v2/identity"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResourceType represents the type of a resource.
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNKNOWN    ResourceType = 0
	ResourceType_RESOURCE_TYPE_PEER       ResourceType = 1
	ResourceType_RESOURCE_TYPE_SERVICE    ResourceType = 2
	ResourceType_RESOURCE_TYPE_CONTENT    ResourceType = 3
	ResourceType_RESOURCE_TYPE_CAPABILITY ResourceType = 4
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNKNOWN",
		1: "RESOURCE_TYPE_PEER",
		2: "RESOURCE_TYPE_SERVICE",
		3: "RESOURCE_TYPE_CONTENT",
		4: "RESOURCE_TYPE_CAPABILITY",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNKNOWN":    0,
		"RESOURCE_TYPE_PEER":       1,
		"RESOURCE_TYPE_SERVICE":    2,
		"RESOURCE_TYPE_CONTENT":    3,
		"RESOURCE_TYPE_CAPABILITY": 4,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_discovery_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{0}
}

// DiscoveryScope represents the scope of discovery operations.
type DiscoveryScope int32

const (
	DiscoveryScope_DISCOVERY_SCOPE_UNKNOWN DiscoveryScope = 0
	DiscoveryScope_DISCOVERY_SCOPE_LOCAL   DiscoveryScope = 1
	DiscoveryScope_DISCOVERY_SCOPE_NETWORK DiscoveryScope = 2
	DiscoveryScope_DISCOVERY_SCOPE_GLOBAL  DiscoveryScope = 3
)

// Enum value maps for DiscoveryScope.
var (
	DiscoveryScope_name = map[int32]string{
		0: "DISCOVERY_SCOPE_UNKNOWN",
		1: "DISCOVERY_SCOPE_LOCAL",
		2: "DISCOVERY_SCOPE_NETWORK",
		3: "DISCOVERY_SCOPE_GLOBAL",
	}
	DiscoveryScope_value = map[string]int32{
		"DISCOVERY_SCOPE_UNKNOWN": 0,
		"DISCOVERY_SCOPE_LOCAL":   1,
		"DISCOVERY_SCOPE_NETWORK": 2,
		"DISCOVERY_SCOPE_GLOBAL":  3,
	}
)

func (x DiscoveryScope) Enum() *DiscoveryScope {
	p := new(DiscoveryScope)
	*p = x
	return p
}

func (x DiscoveryScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveryScope) Descriptor() protoreflect.EnumDescriptor {
	return file_discovery_proto_enumTypes[1].Descriptor()
}

func (DiscoveryScope) Type() protoreflect.EnumType {
	return &file_discovery_proto_enumTypes[1]
}

func (x DiscoveryScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveryScope.Descriptor instead.
func (DiscoveryScope) EnumDescriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{1}
}

// ResourceID represents a unique identifier for a resource.
type ResourceID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceID) Reset() {
	*x = ResourceID{}
	mi := &file_discovery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceID) ProtoMessage() {}

func (x *ResourceID) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceID.ProtoReflect.Descriptor instead.
func (*ResourceID) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ServiceID represents a unique identifier for a service.
type ServiceID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceID) Reset() {
	*x = ServiceID{}
	mi := &file_discovery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceID) ProtoMessage() {}

func (x *ServiceID) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceID.ProtoReflect.Descriptor instead.
func (*ServiceID) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ResourceInfo contains metadata about a discoverable resource.
type ResourceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *ResourceID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ResourceType           `protobuf:"varint,2,opt,name=type,proto3,enum=peers_touch.v2.ResourceType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Owner         *identity.IdentityID   `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Addresses     []string               `protobuf:"bytes,8,rep,name=addresses,proto3" json:"addresses,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // optional
	Score         float64                `protobuf:"fixed64,12,opt,name=score,proto3" json:"score,omitempty"`                        // relevance or quality score
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceInfo) Reset() {
	*x = ResourceInfo{}
	mi := &file_discovery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInfo) ProtoMessage() {}

func (x *ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInfo.ProtoReflect.Descriptor instead.
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceInfo) GetId() *ResourceID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResourceInfo) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNKNOWN
}

func (x *ResourceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResourceInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ResourceInfo) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ResourceInfo) GetOwner() *identity.IdentityID {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ResourceInfo) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ResourceInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ResourceInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ResourceInfo) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *ResourceInfo) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

// ServiceInfo contains metadata about a discoverable service.
type ServiceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *ServiceID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Protocols     []string               `protobuf:"bytes,5,rep,name=protocols,proto3" json:"protocols,omitempty"`
	Endpoints     []string               `protobuf:"bytes,6,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Provider      *identity.IdentityID   `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
	RegisteredAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	IsAvailable   bool                   `protobuf:"varint,11,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Load          float64                `protobuf:"fixed64,12,opt,name=load,proto3" json:"load,omitempty"` // 0.0 to 1.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	mi := &file_discovery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInfo) GetId() *ServiceID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ServiceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *ServiceInfo) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ServiceInfo) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ServiceInfo) GetProvider() *identity.IdentityID {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *ServiceInfo) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *ServiceInfo) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

func (x *ServiceInfo) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *ServiceInfo) GetLoad() float64 {
	if x != nil {
		return x.Load
	}
	return 0
}

// PeerInfo contains metadata about a discoverable peer.
type PeerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *identity.IdentityID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Addresses     []string               `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Protocols     []string               `protobuf:"bytes,4,rep,name=protocols,proto3" json:"protocols,omitempty"`
	Capabilities  map[string]string      `protobuf:"bytes,5,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	IsOnline      bool                   `protobuf:"varint,7,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	Reputation    float64                `protobuf:"fixed64,8,opt,name=reputation,proto3" json:"reputation,omitempty"` // 0.0 to 1.0
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`           // geographical region
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_discovery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{4}
}

func (x *PeerInfo) GetId() *identity.IdentityID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PeerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PeerInfo) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *PeerInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *PeerInfo) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PeerInfo) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *PeerInfo) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *PeerInfo) GetReputation() float64 {
	if x != nil {
		return x.Reputation
	}
	return 0
}

func (x *PeerInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// QueryFilter represents filters for discovery queries.
type QueryFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ResourceType           `protobuf:"varint,1,opt,name=type,proto3,enum=peers_touch.v2.ResourceType" json:"type,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Owner         *identity.IdentityID   `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	NamePattern   string                 `protobuf:"bytes,5,opt,name=name_pattern,json=namePattern,proto3" json:"name_pattern,omitempty"` // regex pattern for name matching
	MinScore      float64                `protobuf:"fixed64,6,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"`
	Region        string                 `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"` // geographical region filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFilter) Reset() {
	*x = QueryFilter{}
	mi := &file_discovery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilter) ProtoMessage() {}

func (x *QueryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFilter.ProtoReflect.Descriptor instead.
func (*QueryFilter) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{5}
}

func (x *QueryFilter) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNKNOWN
}

func (x *QueryFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *QueryFilter) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *QueryFilter) GetOwner() *identity.IdentityID {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *QueryFilter) GetNamePattern() string {
	if x != nil {
		return x.NamePattern
	}
	return ""
}

func (x *QueryFilter) GetMinScore() float64 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *QueryFilter) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// QueryOptions contains options for discovery queries.
type QueryOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy        string                 `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"` // "score", "created_at", "updated_at", etc.
	SortDesc      bool                   `protobuf:"varint,4,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`
	TimeoutMs     int64                  `protobuf:"varint,5,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // Timeout in milliseconds
	Scope         DiscoveryScope         `protobuf:"varint,6,opt,name=scope,proto3,enum=peers_touch.v2.DiscoveryScope" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOptions) Reset() {
	*x = QueryOptions{}
	mi := &file_discovery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptions) ProtoMessage() {}

func (x *QueryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptions.ProtoReflect.Descriptor instead.
func (*QueryOptions) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *QueryOptions) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryOptions) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *QueryOptions) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *QueryOptions) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

func (x *QueryOptions) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *QueryOptions) GetScope() DiscoveryScope {
	if x != nil {
		return x.Scope
	}
	return DiscoveryScope_DISCOVERY_SCOPE_UNKNOWN
}

// AnnounceOptions contains options for announcing resources.
type AnnounceOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TtlSeconds    int64                  `protobuf:"varint,1,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"` // Time to live in seconds
	Scope         DiscoveryScope         `protobuf:"varint,2,opt,name=scope,proto3,enum=peers_touch.v2.DiscoveryScope" json:"scope,omitempty"`
	Persistent    bool                   `protobuf:"varint,3,opt,name=persistent,proto3" json:"persistent,omitempty"` // Whether to persist across restarts
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnnounceOptions) Reset() {
	*x = AnnounceOptions{}
	mi := &file_discovery_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnnounceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceOptions) ProtoMessage() {}

func (x *AnnounceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceOptions.ProtoReflect.Descriptor instead.
func (*AnnounceOptions) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{7}
}

func (x *AnnounceOptions) GetTtlSeconds() int64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

func (x *AnnounceOptions) GetScope() DiscoveryScope {
	if x != nil {
		return x.Scope
	}
	return DiscoveryScope_DISCOVERY_SCOPE_UNKNOWN
}

func (x *AnnounceOptions) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *AnnounceOptions) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// IndexEntry represents an entry in the discovery index.
type IndexEntry struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ResourceId        *ResourceID            `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Type              ResourceType           `protobuf:"varint,2,opt,name=type,proto3,enum=peers_touch.v2.ResourceType" json:"type,omitempty"`
	Keywords          []string               `protobuf:"bytes,3,rep,name=keywords,proto3" json:"keywords,omitempty"`
	IndexedAttributes map[string]string      `protobuf:"bytes,4,rep,name=indexed_attributes,json=indexedAttributes,proto3" json:"indexed_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IndexedAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=indexed_at,json=indexedAt,proto3" json:"indexed_at,omitempty"`
	RelevanceScore    float64                `protobuf:"fixed64,6,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IndexEntry) Reset() {
	*x = IndexEntry{}
	mi := &file_discovery_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexEntry) ProtoMessage() {}

func (x *IndexEntry) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexEntry.ProtoReflect.Descriptor instead.
func (*IndexEntry) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{8}
}

func (x *IndexEntry) GetResourceId() *ResourceID {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *IndexEntry) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNKNOWN
}

func (x *IndexEntry) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *IndexEntry) GetIndexedAttributes() map[string]string {
	if x != nil {
		return x.IndexedAttributes
	}
	return nil
}

func (x *IndexEntry) GetIndexedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IndexedAt
	}
	return nil
}

func (x *IndexEntry) GetRelevanceScore() float64 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

// QueryRequest represents a request to query for resources.
type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // search query string
	Filter        *QueryFilter           `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Options       *QueryOptions          `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_discovery_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{9}
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryRequest) GetOptions() *QueryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// QueryResponse represents the response to a query request.
type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []*ResourceInfo        `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	NextToken     string                 `protobuf:"bytes,4,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"` // for pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_discovery_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{10}
}

func (x *QueryResponse) GetResources() []*ResourceInfo {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *QueryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *QueryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *QueryResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

// AnnounceRequest represents a request to announce a resource.
type AnnounceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      *ResourceInfo          `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Options       *AnnounceOptions       `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnnounceRequest) Reset() {
	*x = AnnounceRequest{}
	mi := &file_discovery_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnnounceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceRequest) ProtoMessage() {}

func (x *AnnounceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceRequest.ProtoReflect.Descriptor instead.
func (*AnnounceRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{11}
}

func (x *AnnounceRequest) GetResource() *ResourceInfo {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AnnounceRequest) GetOptions() *AnnounceOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// AnnounceResponse represents the response to an announce request.
type AnnounceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceId    *ResourceID            `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnnounceResponse) Reset() {
	*x = AnnounceResponse{}
	mi := &file_discovery_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnnounceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnounceResponse) ProtoMessage() {}

func (x *AnnounceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnounceResponse.ProtoReflect.Descriptor instead.
func (*AnnounceResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{12}
}

func (x *AnnounceResponse) GetResourceId() *ResourceID {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *AnnounceResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *AnnounceResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// WithdrawRequest represents a request to withdraw a resource announcement.
type WithdrawRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceId    *ResourceID            `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	mi := &file_discovery_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{13}
}

func (x *WithdrawRequest) GetResourceId() *ResourceID {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

// ResolveRequest represents a request to resolve specific resources by ID.
type ResolveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceIds   []*ResourceID          `protobuf:"bytes,1,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveRequest) Reset() {
	*x = ResolveRequest{}
	mi := &file_discovery_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRequest) ProtoMessage() {}

func (x *ResolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRequest.ProtoReflect.Descriptor instead.
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{14}
}

func (x *ResolveRequest) GetResourceIds() []*ResourceID {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

// ResolveResponse represents the response to a resolve request.
type ResolveResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Resources     map[string]*ResourceInfo `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key is ResourceID.value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveResponse) Reset() {
	*x = ResolveResponse{}
	mi := &file_discovery_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveResponse) ProtoMessage() {}

func (x *ResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveResponse.ProtoReflect.Descriptor instead.
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{15}
}

func (x *ResolveResponse) GetResources() map[string]*ResourceInfo {
	if x != nil {
		return x.Resources
	}
	return nil
}

// FindPeersRequest represents a request to find peers.
type FindPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capabilities  []string               `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"` // required capabilities
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`             // optional region filter
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindPeersRequest) Reset() {
	*x = FindPeersRequest{}
	mi := &file_discovery_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPeersRequest) ProtoMessage() {}

func (x *FindPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPeersRequest.ProtoReflect.Descriptor instead.
func (*FindPeersRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{16}
}

func (x *FindPeersRequest) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *FindPeersRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *FindPeersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// FindPeersResponse represents the response to find peers.
type FindPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerInfo            `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindPeersResponse) Reset() {
	*x = FindPeersResponse{}
	mi := &file_discovery_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPeersResponse) ProtoMessage() {}

func (x *FindPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPeersResponse.ProtoReflect.Descriptor instead.
func (*FindPeersResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{17}
}

func (x *FindPeersResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

// FindServicesRequest represents a request to find services.
type FindServicesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	VersionPattern string                 `protobuf:"bytes,2,opt,name=version_pattern,json=versionPattern,proto3" json:"version_pattern,omitempty"` // optional version pattern
	Protocols      []string               `protobuf:"bytes,3,rep,name=protocols,proto3" json:"protocols,omitempty"`                                 // required protocols
	Limit          int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FindServicesRequest) Reset() {
	*x = FindServicesRequest{}
	mi := &file_discovery_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindServicesRequest) ProtoMessage() {}

func (x *FindServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindServicesRequest.ProtoReflect.Descriptor instead.
func (*FindServicesRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{18}
}

func (x *FindServicesRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *FindServicesRequest) GetVersionPattern() string {
	if x != nil {
		return x.VersionPattern
	}
	return ""
}

func (x *FindServicesRequest) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *FindServicesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// FindServicesResponse represents the response to find services.
type FindServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*ServiceInfo         `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindServicesResponse) Reset() {
	*x = FindServicesResponse{}
	mi := &file_discovery_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindServicesResponse) ProtoMessage() {}

func (x *FindServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindServicesResponse.ProtoReflect.Descriptor instead.
func (*FindServicesResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{19}
}

func (x *FindServicesResponse) GetServices() []*ServiceInfo {
	if x != nil {
		return x.Services
	}
	return nil
}

// RegisterServiceRequest represents a request to register a service.
type RegisterServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *ServiceInfo           `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServiceRequest) Reset() {
	*x = RegisterServiceRequest{}
	mi := &file_discovery_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRequest) ProtoMessage() {}

func (x *RegisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceRequest.ProtoReflect.Descriptor instead.
func (*RegisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{20}
}

func (x *RegisterServiceRequest) GetService() *ServiceInfo {
	if x != nil {
		return x.Service
	}
	return nil
}

// RegisterServiceResponse represents the response to service registration.
type RegisterServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     *ServiceID             `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServiceResponse) Reset() {
	*x = RegisterServiceResponse{}
	mi := &file_discovery_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceResponse) ProtoMessage() {}

func (x *RegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceResponse.ProtoReflect.Descriptor instead.
func (*RegisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{21}
}

func (x *RegisterServiceResponse) GetServiceId() *ServiceID {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *RegisterServiceResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// UnregisterServiceRequest represents a request to unregister a service.
type UnregisterServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     *ServiceID             `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterServiceRequest) Reset() {
	*x = UnregisterServiceRequest{}
	mi := &file_discovery_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceRequest) ProtoMessage() {}

func (x *UnregisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServiceRequest.ProtoReflect.Descriptor instead.
func (*UnregisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{22}
}

func (x *UnregisterServiceRequest) GetServiceId() *ServiceID {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

// HeartbeatRequest represents a service heartbeat request.
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     *ServiceID             `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Load          float64                `protobuf:"fixed64,2,opt,name=load,proto3" json:"load,omitempty"` // current load 0.0 to 1.0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_discovery_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{23}
}

func (x *HeartbeatRequest) GetServiceId() *ServiceID {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

func (x *HeartbeatRequest) GetLoad() float64 {
	if x != nil {
		return x.Load
	}
	return 0
}

// HeartbeatResponse represents the response to a heartbeat request.
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextHeartbeat *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=next_heartbeat,json=nextHeartbeat,proto3" json:"next_heartbeat,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_discovery_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{24}
}

func (x *HeartbeatResponse) GetNextHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.NextHeartbeat
	}
	return nil
}

func (x *HeartbeatResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// IndexUpdateRequest represents a request to update the discovery index.
type IndexUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*IndexEntry          `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexUpdateRequest) Reset() {
	*x = IndexUpdateRequest{}
	mi := &file_discovery_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexUpdateRequest) ProtoMessage() {}

func (x *IndexUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexUpdateRequest.ProtoReflect.Descriptor instead.
func (*IndexUpdateRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{25}
}

func (x *IndexUpdateRequest) GetEntries() []*IndexEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// IndexSearchRequest represents a request to search the discovery index.
type IndexSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Filter        *QueryFilter           `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Options       *QueryOptions          `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexSearchRequest) Reset() {
	*x = IndexSearchRequest{}
	mi := &file_discovery_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchRequest) ProtoMessage() {}

func (x *IndexSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchRequest.ProtoReflect.Descriptor instead.
func (*IndexSearchRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{26}
}

func (x *IndexSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *IndexSearchRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *IndexSearchRequest) GetOptions() *QueryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// IndexSearchResponse represents the response to an index search.
type IndexSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*IndexEntry          `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexSearchResponse) Reset() {
	*x = IndexSearchResponse{}
	mi := &file_discovery_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchResponse) ProtoMessage() {}

func (x *IndexSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchResponse.ProtoReflect.Descriptor instead.
func (*IndexSearchResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{27}
}

func (x *IndexSearchResponse) GetEntries() []*IndexEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *IndexSearchResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// IndexStats represents statistics about the discovery index.
type IndexStats struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalEntries     int64                  `protobuf:"varint,1,opt,name=total_entries,json=totalEntries,proto3" json:"total_entries,omitempty"`
	ActiveEntries    int64                  `protobuf:"varint,2,opt,name=active_entries,json=activeEntries,proto3" json:"active_entries,omitempty"`
	ExpiredEntries   int64                  `protobuf:"varint,3,opt,name=expired_entries,json=expiredEntries,proto3" json:"expired_entries,omitempty"`
	TypeCounts       map[string]int64       `protobuf:"bytes,4,rep,name=type_counts,json=typeCounts,proto3" json:"type_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // count by resource type
	LastUpdated      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	AverageLoad      float64                `protobuf:"fixed64,6,opt,name=average_load,json=averageLoad,proto3" json:"average_load,omitempty"`
	MemoryUsageBytes int64                  `protobuf:"varint,7,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IndexStats) Reset() {
	*x = IndexStats{}
	mi := &file_discovery_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexStats) ProtoMessage() {}

func (x *IndexStats) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexStats.ProtoReflect.Descriptor instead.
func (*IndexStats) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{28}
}

func (x *IndexStats) GetTotalEntries() int64 {
	if x != nil {
		return x.TotalEntries
	}
	return 0
}

func (x *IndexStats) GetActiveEntries() int64 {
	if x != nil {
		return x.ActiveEntries
	}
	return 0
}

func (x *IndexStats) GetExpiredEntries() int64 {
	if x != nil {
		return x.ExpiredEntries
	}
	return 0
}

func (x *IndexStats) GetTypeCounts() map[string]int64 {
	if x != nil {
		return x.TypeCounts
	}
	return nil
}

func (x *IndexStats) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *IndexStats) GetAverageLoad() float64 {
	if x != nil {
		return x.AverageLoad
	}
	return 0
}

func (x *IndexStats) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

// ListPeersRequest represents a request to list peers in the routing table.
type ListPeersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`                             // optional, default to all
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                           // optional, for pagination
	OnlineOnly    bool                   `protobuf:"varint,3,opt,name=online_only,json=onlineOnly,proto3" json:"online_only,omitempty"` // optional, filter online peers only
	Protocols     []string               `protobuf:"bytes,4,rep,name=protocols,proto3" json:"protocols,omitempty"`                      // optional, filter by supported protocols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	mi := &file_discovery_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{29}
}

func (x *ListPeersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPeersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPeersRequest) GetOnlineOnly() bool {
	if x != nil {
		return x.OnlineOnly
	}
	return false
}

func (x *ListPeersRequest) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

// ListPeersResponse represents the response to list peers.
type ListPeersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerInfo            `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_discovery_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{30}
}

func (x *ListPeersResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ListPeersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListPeersResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// DiscoveryStatus represents the current status of the discovery manager.
type DiscoveryStatus struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IsRunning          bool                   `protobuf:"varint,1,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
	StartedAt          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ActiveConnections  int32                  `protobuf:"varint,3,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	RegisteredServices int32                  `protobuf:"varint,4,opt,name=registered_services,json=registeredServices,proto3" json:"registered_services,omitempty"`
	KnownPeers         int32                  `protobuf:"varint,5,opt,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"`
	IndexStats         *IndexStats            `protobuf:"bytes,6,opt,name=index_stats,json=indexStats,proto3" json:"index_stats,omitempty"`
	HealthChecks       map[string]string      `protobuf:"bytes,7,rep,name=health_checks,json=healthChecks,proto3" json:"health_checks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // component -> status
	Version            string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DiscoveryStatus) Reset() {
	*x = DiscoveryStatus{}
	mi := &file_discovery_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryStatus) ProtoMessage() {}

func (x *DiscoveryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_discovery_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryStatus.ProtoReflect.Descriptor instead.
func (*DiscoveryStatus) Descriptor() ([]byte, []int) {
	return file_discovery_proto_rawDescGZIP(), []int{31}
}

func (x *DiscoveryStatus) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *DiscoveryStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *DiscoveryStatus) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *DiscoveryStatus) GetRegisteredServices() int32 {
	if x != nil {
		return x.RegisteredServices
	}
	return 0
}

func (x *DiscoveryStatus) GetKnownPeers() int32 {
	if x != nil {
		return x.KnownPeers
	}
	return 0
}

func (x *DiscoveryStatus) GetIndexStats() *IndexStats {
	if x != nil {
		return x.IndexStats
	}
	return nil
}

func (x *DiscoveryStatus) GetHealthChecks() map[string]string {
	if x != nil {
		return x.HealthChecks
	}
	return nil
}

func (x *DiscoveryStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_discovery_proto protoreflect.FileDescriptor

const file_discovery_proto_rawDesc = "" +
	"\n" +
	"\x0fdiscovery.proto\x12\x0epeers_touch.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x0eidentity.proto\"\"\n" +
	"\n" +
	"ResourceID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"!\n" +
	"\tServiceID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xda\x04\n" +
	"\fResourceInfo\x12*\n" +
	"\x02id\x18\x01 \x01(\v2\x1a.peers_touch.v2.ResourceIDR\x02id\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.peers_touch.v2.ResourceTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12L\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2,.peers_touch.v2.ResourceInfo.AttributesEntryR\n" +
	"attributes\x120\n" +
	"\x05owner\x18\a \x01(\v2\x1a.peers_touch.v2.IdentityIDR\x05owner\x12\x1c\n" +
	"\taddresses\x18\b \x03(\tR\taddresses\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"expires_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x14\n" +
	"\x05score\x18\f \x01(\x01R\x05score\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcb\x04\n" +
	"\vServiceInfo\x12)\n" +
	"\x02id\x18\x01 \x01(\v2\x19.peers_touch.v2.ServiceIDR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1c\n" +
	"\tprotocols\x18\x05 \x03(\tR\tprotocols\x12\x1c\n" +
	"\tendpoints\x18\x06 \x03(\tR\tendpoints\x12Q\n" +
	"\fcapabilities\x18\a \x03(\v2-.peers_touch.v2.ServiceInfo.CapabilitiesEntryR\fcapabilities\x126\n" +
	"\bprovider\x18\b \x01(\v2\x1a.peers_touch.v2.IdentityIDR\bprovider\x12?\n" +
	"\rregistered_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x12A\n" +
	"\x0elast_heartbeat\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\x12!\n" +
	"\fis_available\x18\v \x01(\bR\visAvailable\x12\x12\n" +
	"\x04load\x18\f \x01(\x01R\x04load\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa5\x03\n" +
	"\bPeerInfo\x12*\n" +
	"\x02id\x18\x01 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\taddresses\x18\x03 \x03(\tR\taddresses\x12\x1c\n" +
	"\tprotocols\x18\x04 \x03(\tR\tprotocols\x12N\n" +
	"\fcapabilities\x18\x05 \x03(\v2*.peers_touch.v2.PeerInfo.CapabilitiesEntryR\fcapabilities\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x1b\n" +
	"\tis_online\x18\a \x01(\bR\bisOnline\x12\x1e\n" +
	"\n" +
	"reputation\x18\b \x01(\x01R\n" +
	"reputation\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x1a?\n" +
	"\x11CapabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe9\x02\n" +
	"\vQueryFilter\x120\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1c.peers_touch.v2.ResourceTypeR\x04type\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x12K\n" +
	"\n" +
	"attributes\x18\x03 \x03(\v2+.peers_touch.v2.QueryFilter.AttributesEntryR\n" +
	"attributes\x120\n" +
	"\x05owner\x18\x04 \x01(\v2\x1a.peers_touch.v2.IdentityIDR\x05owner\x12!\n" +
	"\fname_pattern\x18\x05 \x01(\tR\vnamePattern\x12\x1b\n" +
	"\tmin_score\x18\x06 \x01(\x01R\bminScore\x12\x16\n" +
	"\x06region\x18\a \x01(\tR\x06region\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc7\x01\n" +
	"\fQueryOptions\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x17\n" +
	"\asort_by\x18\x03 \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\x04 \x01(\bR\bsortDesc\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x05 \x01(\x03R\ttimeoutMs\x124\n" +
	"\x05scope\x18\x06 \x01(\x0e2\x1e.peers_touch.v2.DiscoveryScopeR\x05scope\"\x90\x02\n" +
	"\x0fAnnounceOptions\x12\x1f\n" +
	"\vttl_seconds\x18\x01 \x01(\x03R\n" +
	"ttlSeconds\x124\n" +
	"\x05scope\x18\x02 \x01(\x0e2\x1e.peers_touch.v2.DiscoveryScopeR\x05scope\x12\x1e\n" +
	"\n" +
	"persistent\x18\x03 \x01(\bR\n" +
	"persistent\x12I\n" +
	"\bmetadata\x18\x04 \x03(\v2-.peers_touch.v2.AnnounceOptions.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x03\n" +
	"\n" +
	"IndexEntry\x12;\n" +
	"\vresource_id\x18\x01 \x01(\v2\x1a.peers_touch.v2.ResourceIDR\n" +
	"resourceId\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.peers_touch.v2.ResourceTypeR\x04type\x12\x1a\n" +
	"\bkeywords\x18\x03 \x03(\tR\bkeywords\x12`\n" +
	"\x12indexed_attributes\x18\x04 \x03(\v21.peers_touch.v2.IndexEntry.IndexedAttributesEntryR\x11indexedAttributes\x129\n" +
	"\n" +
	"indexed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tindexedAt\x12'\n" +
	"\x0frelevance_score\x18\x06 \x01(\x01R\x0erelevanceScore\x1aD\n" +
	"\x16IndexedAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x01\n" +
	"\fQueryRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x123\n" +
	"\x06filter\x18\x02 \x01(\v2\x1b.peers_touch.v2.QueryFilterR\x06filter\x126\n" +
	"\aoptions\x18\x03 \x01(\v2\x1c.peers_touch.v2.QueryOptionsR\aoptions\"\xa6\x01\n" +
	"\rQueryResponse\x12:\n" +
	"\tresources\x18\x01 \x03(\v2\x1c.peers_touch.v2.ResourceInfoR\tresources\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x1d\n" +
	"\n" +
	"next_token\x18\x04 \x01(\tR\tnextToken\"\x86\x01\n" +
	"\x0fAnnounceRequest\x128\n" +
	"\bresource\x18\x01 \x01(\v2\x1c.peers_touch.v2.ResourceInfoR\bresource\x129\n" +
	"\aoptions\x18\x02 \x01(\v2\x1f.peers_touch.v2.AnnounceOptionsR\aoptions\"\xaf\x01\n" +
	"\x10AnnounceResponse\x12;\n" +
	"\vresource_id\x18\x01 \x01(\v2\x1a.peers_touch.v2.ResourceIDR\n" +
	"resourceId\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"N\n" +
	"\x0fWithdrawRequest\x12;\n" +
	"\vresource_id\x18\x01 \x01(\v2\x1a.peers_touch.v2.ResourceIDR\n" +
	"resourceId\"O\n" +
	"\x0eResolveRequest\x12=\n" +
	"\fresource_ids\x18\x01 \x03(\v2\x1a.peers_touch.v2.ResourceIDR\vresourceIds\"\xbb\x01\n" +
	"\x0fResolveResponse\x12L\n" +
	"\tresources\x18\x01 \x03(\v2..peers_touch.v2.ResolveResponse.ResourcesEntryR\tresources\x1aZ\n" +
	"\x0eResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.peers_touch.v2.ResourceInfoR\x05value:\x028\x01\"d\n" +
	"\x10FindPeersRequest\x12\"\n" +
	"\fcapabilities\x18\x01 \x03(\tR\fcapabilities\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"C\n" +
	"\x11FindPeersResponse\x12.\n" +
	"\x05peers\x18\x01 \x03(\v2\x18.peers_touch.v2.PeerInfoR\x05peers\"\x95\x01\n" +
	"\x13FindServicesRequest\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12'\n" +
	"\x0fversion_pattern\x18\x02 \x01(\tR\x0eversionPattern\x12\x1c\n" +
	"\tprotocols\x18\x03 \x03(\tR\tprotocols\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"O\n" +
	"\x14FindServicesResponse\x127\n" +
	"\bservices\x18\x01 \x03(\v2\x1b.peers_touch.v2.ServiceInfoR\bservices\"O\n" +
	"\x16RegisterServiceRequest\x125\n" +
	"\aservice\x18\x01 \x01(\v2\x1b.peers_touch.v2.ServiceInfoR\aservice\"x\n" +
	"\x17RegisterServiceResponse\x128\n" +
	"\n" +
	"service_id\x18\x01 \x01(\v2\x19.peers_touch.v2.ServiceIDR\tserviceId\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"T\n" +
	"\x18UnregisterServiceRequest\x128\n" +
	"\n" +
	"service_id\x18\x01 \x01(\v2\x19.peers_touch.v2.ServiceIDR\tserviceId\"`\n" +
	"\x10HeartbeatRequest\x128\n" +
	"\n" +
	"service_id\x18\x01 \x01(\v2\x19.peers_touch.v2.ServiceIDR\tserviceId\x12\x12\n" +
	"\x04load\x18\x02 \x01(\x01R\x04load\"{\n" +
	"\x11HeartbeatResponse\x12A\n" +
	"\x0enext_heartbeat\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\rnextHeartbeat\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"J\n" +
	"\x12IndexUpdateRequest\x124\n" +
	"\aentries\x18\x01 \x03(\v2\x1a.peers_touch.v2.IndexEntryR\aentries\"\x97\x01\n" +
	"\x12IndexSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x123\n" +
	"\x06filter\x18\x02 \x01(\v2\x1b.peers_touch.v2.QueryFilterR\x06filter\x126\n" +
	"\aoptions\x18\x03 \x01(\v2\x1c.peers_touch.v2.QueryOptionsR\aoptions\"l\n" +
	"\x13IndexSearchResponse\x124\n" +
	"\aentries\x18\x01 \x03(\v2\x1a.peers_touch.v2.IndexEntryR\aentries\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x9d\x03\n" +
	"\n" +
	"IndexStats\x12#\n" +
	"\rtotal_entries\x18\x01 \x01(\x03R\ftotalEntries\x12%\n" +
	"\x0eactive_entries\x18\x02 \x01(\x03R\ractiveEntries\x12'\n" +
	"\x0fexpired_entries\x18\x03 \x01(\x03R\x0eexpiredEntries\x12K\n" +
	"\vtype_counts\x18\x04 \x03(\v2*.peers_touch.v2.IndexStats.TypeCountsEntryR\n" +
	"typeCounts\x12=\n" +
	"\flast_updated\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12!\n" +
	"\faverage_load\x18\x06 \x01(\x01R\vaverageLoad\x12,\n" +
	"\x12memory_usage_bytes\x18\a \x01(\x03R\x10memoryUsageBytes\x1a=\n" +
	"\x0fTypeCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x7f\n" +
	"\x10ListPeersRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1f\n" +
	"\vonline_only\x18\x03 \x01(\bR\n" +
	"onlineOnly\x12\x1c\n" +
	"\tprotocols\x18\x04 \x03(\tR\tprotocols\"\x7f\n" +
	"\x11ListPeersResponse\x12.\n" +
	"\x05peers\x18\x01 \x03(\v2\x18.peers_touch.v2.PeerInfoR\x05peers\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\"\xdc\x03\n" +
	"\x0fDiscoveryStatus\x12\x1d\n" +
	"\n" +
	"is_running\x18\x01 \x01(\bR\tisRunning\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12-\n" +
	"\x12active_connections\x18\x03 \x01(\x05R\x11activeConnections\x12/\n" +
	"\x13registered_services\x18\x04 \x01(\x05R\x12registeredServices\x12\x1f\n" +
	"\vknown_peers\x18\x05 \x01(\x05R\n" +
	"knownPeers\x12;\n" +
	"\vindex_stats\x18\x06 \x01(\v2\x1a.peers_touch.v2.IndexStatsR\n" +
	"indexStats\x12V\n" +
	"\rhealth_checks\x18\a \x03(\v21.peers_touch.v2.DiscoveryStatus.HealthChecksEntryR\fhealthChecks\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x1a?\n" +
	"\x11HealthChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x95\x01\n" +
	"\fResourceType\x12\x19\n" +
	"\x15RESOURCE_TYPE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12RESOURCE_TYPE_PEER\x10\x01\x12\x19\n" +
	"\x15RESOURCE_TYPE_SERVICE\x10\x02\x12\x19\n" +
	"\x15RESOURCE_TYPE_CONTENT\x10\x03\x12\x1c\n" +
	"\x18RESOURCE_TYPE_CAPABILITY\x10\x04*\x81\x01\n" +
	"\x0eDiscoveryScope\x12\x1b\n" +
	"\x17DISCOVERY_SCOPE_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15DISCOVERY_SCOPE_LOCAL\x10\x01\x12\x1b\n" +
	"\x17DISCOVERY_SCOPE_NETWORK\x10\x02\x12\x1a\n" +
	"\x16DISCOVERY_SCOPE_GLOBAL\x10\x03B:Z8github.com/dirty-bro-tech/peers-touch-go/model/v2/discoveryb\x06proto3"

var (
	file_discovery_proto_rawDescOnce sync.Once
	file_discovery_proto_rawDescData []byte
)

func file_discovery_proto_rawDescGZIP() []byte {
	file_discovery_proto_rawDescOnce.Do(func() {
		file_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_discovery_proto_rawDesc), len(file_discovery_proto_rawDesc)))
	})
	return file_discovery_proto_rawDescData
}

var file_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_discovery_proto_goTypes = []any{
	(ResourceType)(0),                // 0: peers_touch.v2.ResourceType
	(DiscoveryScope)(0),              // 1: peers_touch.v2.DiscoveryScope
	(*ResourceID)(nil),               // 2: peers_touch.v2.ResourceID
	(*ServiceID)(nil),                // 3: peers_touch.v2.ServiceID
	(*ResourceInfo)(nil),             // 4: peers_touch.v2.ResourceInfo
	(*ServiceInfo)(nil),              // 5: peers_touch.v2.ServiceInfo
	(*PeerInfo)(nil),                 // 6: peers_touch.v2.PeerInfo
	(*QueryFilter)(nil),              // 7: peers_touch.v2.QueryFilter
	(*QueryOptions)(nil),             // 8: peers_touch.v2.QueryOptions
	(*AnnounceOptions)(nil),          // 9: peers_touch.v2.AnnounceOptions
	(*IndexEntry)(nil),               // 10: peers_touch.v2.IndexEntry
	(*QueryRequest)(nil),             // 11: peers_touch.v2.QueryRequest
	(*QueryResponse)(nil),            // 12: peers_touch.v2.QueryResponse
	(*AnnounceRequest)(nil),          // 13: peers_touch.v2.AnnounceRequest
	(*AnnounceResponse)(nil),         // 14: peers_touch.v2.AnnounceResponse
	(*WithdrawRequest)(nil),          // 15: peers_touch.v2.WithdrawRequest
	(*ResolveRequest)(nil),           // 16: peers_touch.v2.ResolveRequest
	(*ResolveResponse)(nil),          // 17: peers_touch.v2.ResolveResponse
	(*FindPeersRequest)(nil),         // 18: peers_touch.v2.FindPeersRequest
	(*FindPeersResponse)(nil),        // 19: peers_touch.v2.FindPeersResponse
	(*FindServicesRequest)(nil),      // 20: peers_touch.v2.FindServicesRequest
	(*FindServicesResponse)(nil),     // 21: peers_touch.v2.FindServicesResponse
	(*RegisterServiceRequest)(nil),   // 22: peers_touch.v2.RegisterServiceRequest
	(*RegisterServiceResponse)(nil),  // 23: peers_touch.v2.RegisterServiceResponse
	(*UnregisterServiceRequest)(nil), // 24: peers_touch.v2.UnregisterServiceRequest
	(*HeartbeatRequest)(nil),         // 25: peers_touch.v2.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 26: peers_touch.v2.HeartbeatResponse
	(*IndexUpdateRequest)(nil),       // 27: peers_touch.v2.IndexUpdateRequest
	(*IndexSearchRequest)(nil),       // 28: peers_touch.v2.IndexSearchRequest
	(*IndexSearchResponse)(nil),      // 29: peers_touch.v2.IndexSearchResponse
	(*IndexStats)(nil),               // 30: peers_touch.v2.IndexStats
	(*ListPeersRequest)(nil),         // 31: peers_touch.v2.ListPeersRequest
	(*ListPeersResponse)(nil),        // 32: peers_touch.v2.ListPeersResponse
	(*DiscoveryStatus)(nil),          // 33: peers_touch.v2.DiscoveryStatus
	nil,                              // 34: peers_touch.v2.ResourceInfo.AttributesEntry
	nil,                              // 35: peers_touch.v2.ServiceInfo.CapabilitiesEntry
	nil,                              // 36: peers_touch.v2.PeerInfo.CapabilitiesEntry
	nil,                              // 37: peers_touch.v2.QueryFilter.AttributesEntry
	nil,                              // 38: peers_touch.v2.AnnounceOptions.MetadataEntry
	nil,                              // 39: peers_touch.v2.IndexEntry.IndexedAttributesEntry
	nil,                              // 40: peers_touch.v2.ResolveResponse.ResourcesEntry
	nil,                              // 41: peers_touch.v2.IndexStats.TypeCountsEntry
	nil,                              // 42: peers_touch.v2.DiscoveryStatus.HealthChecksEntry
	(*identity.IdentityID)(nil),      // 43: peers_touch.v2.IdentityID
	(*timestamppb.Timestamp)(nil),    // 44: google.protobuf.Timestamp
}
var file_discovery_proto_depIdxs = []int32{
	2,  // 0: peers_touch.v2.ResourceInfo.id:type_name -> peers_touch.v2.ResourceID
	0,  // 1: peers_touch.v2.ResourceInfo.type:type_name -> peers_touch.v2.ResourceType
	34, // 2: peers_touch.v2.ResourceInfo.attributes:type_name -> peers_touch.v2.ResourceInfo.AttributesEntry
	43, // 3: peers_touch.v2.ResourceInfo.owner:type_name -> peers_touch.v2.IdentityID
	44, // 4: peers_touch.v2.ResourceInfo.created_at:type_name -> google.protobuf.Timestamp
	44, // 5: peers_touch.v2.ResourceInfo.updated_at:type_name -> google.protobuf.Timestamp
	44, // 6: peers_touch.v2.ResourceInfo.expires_at:type_name -> google.protobuf.Timestamp
	3,  // 7: peers_touch.v2.ServiceInfo.id:type_name -> peers_touch.v2.ServiceID
	35, // 8: peers_touch.v2.ServiceInfo.capabilities:type_name -> peers_touch.v2.ServiceInfo.CapabilitiesEntry
	43, // 9: peers_touch.v2.ServiceInfo.provider:type_name -> peers_touch.v2.IdentityID
	44, // 10: peers_touch.v2.ServiceInfo.registered_at:type_name -> google.protobuf.Timestamp
	44, // 11: peers_touch.v2.ServiceInfo.last_heartbeat:type_name -> google.protobuf.Timestamp
	43, // 12: peers_touch.v2.PeerInfo.id:type_name -> peers_touch.v2.IdentityID
	36, // 13: peers_touch.v2.PeerInfo.capabilities:type_name -> peers_touch.v2.PeerInfo.CapabilitiesEntry
	44, // 14: peers_touch.v2.PeerInfo.last_seen:type_name -> google.protobuf.Timestamp
	0,  // 15: peers_touch.v2.QueryFilter.type:type_name -> peers_touch.v2.ResourceType
	37, // 16: peers_touch.v2.QueryFilter.attributes:type_name -> peers_touch.v2.QueryFilter.AttributesEntry
	43, // 17: peers_touch.v2.QueryFilter.owner:type_name -> peers_touch.v2.IdentityID
	1,  // 18: peers_touch.v2.QueryOptions.scope:type_name -> peers_touch.v2.DiscoveryScope
	1,  // 19: peers_touch.v2.AnnounceOptions.scope:type_name -> peers_touch.v2.DiscoveryScope
	38, // 20: peers_touch.v2.AnnounceOptions.metadata:type_name -> peers_touch.v2.AnnounceOptions.MetadataEntry
	2,  // 21: peers_touch.v2.IndexEntry.resource_id:type_name -> peers_touch.v2.ResourceID
	0,  // 22: peers_touch.v2.IndexEntry.type:type_name -> peers_touch.v2.ResourceType
	39, // 23: peers_touch.v2.IndexEntry.indexed_attributes:type_name -> peers_touch.v2.IndexEntry.IndexedAttributesEntry
	44, // 24: peers_touch.v2.IndexEntry.indexed_at:type_name -> google.protobuf.Timestamp
	7,  // 25: peers_touch.v2.QueryRequest.filter:type_name -> peers_touch.v2.QueryFilter
	8,  // 26: peers_touch.v2.QueryRequest.options:type_name -> peers_touch.v2.QueryOptions
	4,  // 27: peers_touch.v2.QueryResponse.resources:type_name -> peers_touch.v2.ResourceInfo
	4,  // 28: peers_touch.v2.AnnounceRequest.resource:type_name -> peers_touch.v2.ResourceInfo
	9,  // 29: peers_touch.v2.AnnounceRequest.options:type_name -> peers_touch.v2.AnnounceOptions
	2,  // 30: peers_touch.v2.AnnounceResponse.resource_id:type_name -> peers_touch.v2.ResourceID
	44, // 31: peers_touch.v2.AnnounceResponse.expires_at:type_name -> google.protobuf.Timestamp
	2,  // 32: peers_touch.v2.WithdrawRequest.resource_id:type_name -> peers_touch.v2.ResourceID
	2,  // 33: peers_touch.v2.ResolveRequest.resource_ids:type_name -> peers_touch.v2.ResourceID
	40, // 34: peers_touch.v2.ResolveResponse.resources:type_name -> peers_touch.v2.ResolveResponse.ResourcesEntry
	6,  // 35: peers_touch.v2.FindPeersResponse.peers:type_name -> peers_touch.v2.PeerInfo
	5,  // 36: peers_touch.v2.FindServicesResponse.services:type_name -> peers_touch.v2.ServiceInfo
	5,  // 37: peers_touch.v2.RegisterServiceRequest.service:type_name -> peers_touch.v2.ServiceInfo
	3,  // 38: peers_touch.v2.RegisterServiceResponse.service_id:type_name -> peers_touch.v2.ServiceID
	3,  // 39: peers_touch.v2.UnregisterServiceRequest.service_id:type_name -> peers_touch.v2.ServiceID
	3,  // 40: peers_touch.v2.HeartbeatRequest.service_id:type_name -> peers_touch.v2.ServiceID
	44, // 41: peers_touch.v2.HeartbeatResponse.next_heartbeat:type_name -> google.protobuf.Timestamp
	10, // 42: peers_touch.v2.IndexUpdateRequest.entries:type_name -> peers_touch.v2.IndexEntry
	7,  // 43: peers_touch.v2.IndexSearchRequest.filter:type_name -> peers_touch.v2.QueryFilter
	8,  // 44: peers_touch.v2.IndexSearchRequest.options:type_name -> peers_touch.v2.QueryOptions
	10, // 45: peers_touch.v2.IndexSearchResponse.entries:type_name -> peers_touch.v2.IndexEntry
	41, // 46: peers_touch.v2.IndexStats.type_counts:type_name -> peers_touch.v2.IndexStats.TypeCountsEntry
	44, // 47: peers_touch.v2.IndexStats.last_updated:type_name -> google.protobuf.Timestamp
	6,  // 48: peers_touch.v2.ListPeersResponse.peers:type_name -> peers_touch.v2.PeerInfo
	44, // 49: peers_touch.v2.DiscoveryStatus.started_at:type_name -> google.protobuf.Timestamp
	30, // 50: peers_touch.v2.DiscoveryStatus.index_stats:type_name -> peers_touch.v2.IndexStats
	42, // 51: peers_touch.v2.DiscoveryStatus.health_checks:type_name -> peers_touch.v2.DiscoveryStatus.HealthChecksEntry
	4,  // 52: peers_touch.v2.ResolveResponse.ResourcesEntry.value:type_name -> peers_touch.v2.ResourceInfo
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_discovery_proto_init() }
func file_discovery_proto_init() {
	if File_discovery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_discovery_proto_rawDesc), len(file_discovery_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_discovery_proto_goTypes,
		DependencyIndexes: file_discovery_proto_depIdxs,
		EnumInfos:         file_discovery_proto_enumTypes,
		MessageInfos:      file_discovery_proto_msgTypes,
	}.Build()
	File_discovery_proto = out.File
	file_discovery_proto_goTypes = nil
	file_discovery_proto_depIdxs = nil
}
